{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/Avatar.svelte","../../node_modules/svelte/store/index.mjs","../../src/stores.ts","../../src/Websocket.ts","../../src/TelegramLogin.svelte","../../src/Canvas.svelte","../../src/Draw.svelte","../../src/shapes.ts","../../node_modules/svelte/motion/index.mjs","../../src/Guess.svelte","../../src/Progressbar.svelte","../../src/Leaderboard.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.29.4' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script lang=\"ts\">\n  import type { User } from \"./interfaces\";\n  export let user: User | undefined;\n</script>\n\n<div class=\"card\">\n  <img alt=\"user pic\" src={user ? user.img_src : \"\"} />\n  <p class=\"has-text-centered\">{user ? user.username : \"\"}</p>\n</div>\n\n<style>\n  div {\n    width: 120px;\n    min-width: 120px;\n    border: 1px solid #aaa;\n    border-radius: 5px;\n    padding: 0.5em;\n    margin: 0.5em;\n    float: left;\n  }\n  p {\n    margin: 0.5em 0 0 0;\n    overflow-wrap: break-word;\n  }\n\n  img {\n    height: 100px;\n    object-fit: contain;\n  }\n</style>\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n",null,null,"<script lang=\"ts\">\n  import { onMount } from \"svelte\";\n  import { socket } from \"./Websocket\";\n  import { state, my_username } from \"./stores\";\n\n  let username = \"\";\n  let prompt = \"\";\n\n  interface TelegramUser {\n    username?: string;\n    first_name?: string;\n    last_name?: string;\n    photo_url?: string;\n    id?: string;\n  }\n\n  const default_images = [\n    \"https://upload.wikimedia.org/wikipedia/en/a/a6/Pok%C3%A9mon_Pikachu_art.png\",\n    \"https://upload.wikimedia.org/wikipedia/en/2/28/Pok%C3%A9mon_Bulbasaur_art.png\",\n    \"https://upload.wikimedia.org/wikipedia/en/5/59/Pok%C3%A9mon_Squirtle_art.png\",\n    \"https://upload.wikimedia.org/wikipedia/en/a/a5/Pok%C3%A9mon_Charmander_art.png\",\n    \"https://upload.wikimedia.org/wikipedia/en/2/22/Pok%C3%A9mon_Jigglypuff_art.png\",\n    \"https://upload.wikimedia.org/wikipedia/en/a/aa/Pok%C3%A9mon_Meowth_art.png\",\n    \"https://upload.wikimedia.org/wikipedia/en/a/a9/Pok%C3%A9mon_Eevee_art.png\",\n    \"https://upload.wikimedia.org/wikipedia/en/4/40/Pok%C3%A9mon_Lapras_art.png\",\n    \"https://upload.wikimedia.org/wikipedia/en/1/1a/Pok%C3%A9mon_Chikorita_art.png\",\n    \"https://upload.wikimedia.org/wikipedia/en/a/aa/Pichu_artwork.png\",\n    \"https://upload.wikimedia.org/wikipedia/en/5/53/Pok%C3%A9mon_Togepi_art.png\",\n    \"https://upload.wikimedia.org/wikipedia/en/2/22/Pok%C3%A9mon_Mudkip_art.png\",\n  ];\n\n  let img_src =\n    default_images[Math.floor(Math.random() * default_images.length)];\n\n  state.subscribe((new_state) => {\n    while (new_state.users.some((u) => u.img_src == img_src)) {\n      img_src =\n        default_images[Math.floor(Math.random() * default_images.length)];\n    }\n  });\n\n  async function onTelegramAuth(user: TelegramUser) {\n    username = user.username || user.first_name + \" \" + user.last_name;\n    console.log(JSON.stringify(user, null, 2));\n    img_src = user.photo_url || img_src;\n    console.log(\"Image src: \" + img_src);\n    await onManualAuth();\n  }\n\n  async function onManualAuth() {\n    if (!prompt) {\n      alert(\"Write prompt first!\");\n      return;\n    }\n    if (!username) {\n      alert(\"Empty username\");\n      return;\n    }\n    if (!img_src) {\n      alert(\"Empty image\");\n      return;\n    }\n    console.log(\"dispatching\");\n    prompt = prompt.toUpperCase().trim();\n    try {\n      await socket.login(username, img_src, prompt);\n    } catch (error) {\n      alert(error);\n      return;\n    }\n    my_username.set(username);\n    console.log(\"Logged in: \", username, img_src, prompt);\n    let tg_login = document.getElementById(\"telegram-login-minnybot\");\n    if (tg_login?.parentNode) tg_login.parentNode.removeChild(tg_login);\n  }\n\n  async function relogin() {\n    if (!username) {\n      alert(\"Empty username\");\n      return;\n    }\n    try {\n      await socket.relogin(username);\n    } catch (error) {\n      alert(error);\n      return;\n    }\n    my_username.set(username);\n    console.log(\"Relogged in: \", username);\n    let tg_login = document.getElementById(\"telegram-login-minnybot\");\n    if (tg_login?.parentNode) tg_login.parentNode.removeChild(tg_login);\n  }\n\n  async function late_login() {\n    if (!username) {\n      alert(\"Empty username\");\n      return;\n    }\n    if (!img_src) {\n      alert(\"Empty image\");\n      return;\n    }\n    try {\n      await socket.late_login(username, img_src);\n    } catch (error) {\n      alert(error);\n      return;\n    }\n    my_username.set(username);\n    console.log(\"Late logged in: \", username, img_src);\n    let tg_login = document.getElementById(\"telegram-login-minnybot\");\n    if (tg_login?.parentNode) tg_login.parentNode.removeChild(tg_login);\n  }\n\n  let login_type: \"login\" | \"relogin\" | \"late login\" = \"login\";\n\n  onMount(async () => {\n    // @ts-ignore: I know I should find a better way, but this works\n    window.onTelegramAuth = onTelegramAuth;\n  });\n</script>\n\n{#if $state.phase === \"login\"}\n  <div class=\"row\">\n    <div class=\"col sm-4\">\n      <div class=\"form-group\">\n        <label for=\"paperInputs2\">Username</label>\n        <input\n          id=\"username-input\"\n          bind:value={username}\n          class=\"input-block\"\n          type=\"text\"\n          placeholder=\"Username\"\n          required\n        />\n      </div>\n    </div>\n    <div class=\"col sm-8\">\n      <div class=\"form-group\">\n        <label for=\"paperInputs3\">Image url</label>\n        <input\n          id=\"image-url-input\"\n          bind:value={img_src}\n          class=\"input-block\"\n          type=\"url\"\n          required\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <input\n      bind:value={prompt}\n      class=\"width-100 input-block\"\n      type=\"text\"\n      placeholder=\"Your prompt\"\n      on:keyup={(key) => (key.code === \"Enter\" ? onManualAuth() : null)}\n      required\n    />\n  </div>\n  <button on:click={onManualAuth} class=\"width-60 btn-block\">Login</button>\n{:else if login_type === \"login\"}\n  <div class=\"centered-flex\">\n    <button on:click={() => (login_type = \"late login\")}>\n      Login as new player\n    </button>\n    <button on:click={() => (login_type = \"relogin\")}>\n      Login as existing player\n    </button>\n  </div>\n{:else if login_type === \"late login\"}\n  <button on:click={() => (login_type = \"relogin\")}>\n    Login as existing player\n  </button>\n  <div class=\"row\">\n    <div class=\"col sm-4\">\n      <div class=\"form-group\">\n        <label for=\"paperInputs2\">Username</label>\n        <input\n          id=\"username-input\"\n          bind:value={username}\n          class=\"input-block\"\n          type=\"text\"\n          placeholder=\"Username\"\n          required\n        />\n      </div>\n    </div>\n    <div class=\"col sm-8\">\n      <div class=\"form-group\">\n        <label for=\"paperInputs3\">Image url</label>\n        <input\n          id=\"image-url-input\"\n          bind:value={img_src}\n          class=\"input-block\"\n          type=\"url\"\n          required\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"col\">\n    <button on:click={late_login}>Login as new player</button>\n  </div>\n{:else}\n  <button on:click={() => (login_type = \"late login\")}>\n    Login as new player\n  </button>\n  <div class=\"row\">\n    <div class=\"col sm-6\">\n      <select bind:value={username}>\n        <option disabled={true} selected={true} value=\"\">\n          Select username\n        </option>\n        {#each $state.users as user}\n          <option value={user.username}>\n            {user.username}\n          </option>\n        {/each}\n      </select>\n    </div>\n    <div class=\"col sm-6\">\n      <button on:click={relogin} disabled={!username} class=\"btn-block\">\n        Login as {username}\n      </button>\n    </div>\n  </div>\n{/if}\n\n<style>\n  button {\n    margin: 1em;\n  }\n  select {\n    margin: 1em;\n    width: 100%;\n  }\n\n  .width-60 {\n    max-width: 60%;\n    margin: auto;\n  }\n\n  .width-100 {\n    width: 100%;\n    margin: auto;\n  }\n</style>\n","<script lang=\"ts\">\n  import type { Shape } from \"./interfaces\";\n  export let shapes: Shape[] = [];\n  export let editable = true;\n  let cur_shape: Shape = {\n    type: \"polyline\",\n    stroke: \"#ff0000\",\n    width: 2,\n    points: [],\n    fill: false,\n  };\n  let is_drawing = false;\n\n  function onMouseup() {\n    if (!is_drawing) {\n      return;\n    }\n    is_drawing = false;\n    switch (cur_shape.type) {\n      case \"polyline\":\n        if (cur_shape.points.length < 2) {\n          return;\n        }\n        break;\n      case \"ellipse\":\n        if (cur_shape.y1 === cur_shape.y2 || cur_shape.x1 === cur_shape.x2) {\n          return;\n        }\n        break;\n    }\n    shapes.push({ ...cur_shape });\n    shapes = shapes;\n  }\n\n  function onMousedown(ev: MouseEvent) {\n    if (!editable) {\n      return;\n    }\n    is_drawing = true;\n    switch (cur_shape.type) {\n      case \"polyline\":\n        cur_shape.points = [[ev.offsetX, ev.offsetY]];\n        break;\n      case \"ellipse\":\n        cur_shape.y1 = cur_shape.y2 = ev.offsetY;\n        cur_shape.x1 = cur_shape.x2 = ev.offsetX;\n        break;\n    }\n  }\n\n  function onMousemove(ev: MouseEvent) {\n    if (!is_drawing) {\n      return;\n    }\n    switch (cur_shape.type) {\n      case \"polyline\":\n        if (ev.shiftKey) {\n          cur_shape.points = [cur_shape.points[0], [ev.offsetX, ev.offsetY]];\n        } else {\n          cur_shape.points.push([ev.offsetX, ev.offsetY]);\n          cur_shape.points = cur_shape.points;\n        }\n        break;\n      case \"ellipse\":\n        cur_shape.y2 = ev.offsetY;\n        cur_shape.x2 = ev.offsetX;\n        break;\n    }\n  }\n\n  function onKeydown(ev: KeyboardEvent) {\n    if (ev.key === \"Alt\") {\n      cur_shape.fill = true;\n    }\n  }\n\n  function onKeyup(ev: KeyboardEvent) {\n    if (ev.key === \"Alt\") {\n      cur_shape.fill = false;\n    }\n  }\n\n  function calcWidth(width: number) {\n    return (\n      width +\n      Math.max(0, width - 10) +\n      Math.max(0, width - 20) +\n      Math.max(0, width - 30)\n    );\n  }\n  let slider_value = 2;\n  $: cur_shape.width = calcWidth(slider_value);\n</script>\n\n<svelte:window on:keydown={onKeydown} on:keyup={onKeyup} />\n\n<svg\n  on:mousemove={onMousemove}\n  on:mouseup={onMouseup}\n  on:mousedown={onMousedown}\n  on:mouseleave={onMouseup}\n  width=\"800\"\n  height=\"600\"\n>\n  {#each is_drawing ? [...shapes, cur_shape] : shapes as shape}\n    {#if shape.type === \"polyline\"}\n      <polyline\n        style=\"fill: {shape.fill\n          ? shape.stroke\n          : 'none'}; stroke: {shape.stroke}; stroke-width: {shape.width}\"\n        points={shape.points.map(([x, y]) => `${x},${y}`).join(\" \")}\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n    {:else if shape.type === \"ellipse\"}\n      <ellipse\n        style=\"fill: {shape.fill\n          ? shape.stroke\n          : 'none'}; stroke: {shape.stroke}; stroke-width: {shape.width}\"\n        cx={(shape.x1 + shape.x2) / 2}\n        cy={(shape.y1 + shape.y2) / 2}\n        rx={Math.abs(shape.x1 - shape.x2) / 2}\n        ry={Math.abs(shape.y1 - shape.y2) / 2}\n      />\n    {/if}\n  {/each}\n</svg>\n\n{#if editable}\n  <div class=\"controls centered-flex\">\n    <div>\n      <label>\n        Size: {cur_shape.width}\n        <input type=\"range\" bind:value={slider_value} min=\"1\" max=\"40\" />\n      </label>\n      <label>\n        <input\n          id=\"fill_checkbox\"\n          type=\"checkbox\"\n          bind:checked={cur_shape.fill}\n        />\n        <span>Fill: {cur_shape.fill}</span>\n      </label>\n      <div>\n        <input\n          id=\"polyline\"\n          type=\"radio\"\n          bind:group={cur_shape.type}\n          value=\"polyline\"\n        />\n        <label for=\"polyline\">Line</label>\n        <input\n          id=\"ellipse\"\n          type=\"radio\"\n          bind:group={cur_shape.type}\n          value=\"ellipse\"\n        />\n        <label for=\"ellipse\">Ellipse</label>\n      </div>\n    </div>\n    <label>\n      Color: {cur_shape.stroke}\n      <input type=\"color\" bind:value={cur_shape.stroke} />\n      <select bind:value={cur_shape.stroke}>\n        <option value=\"#FF0000\">red</option>\n        <option value=\"#FFA500\">orange</option>\n        <option value=\"#ffff00\">yellow</option>\n        <option value=\"#008000\">green</option>\n        <option value=\"#00ffff\">cyan</option>\n        <option value=\"#0000ff\">blue</option>\n        <option value=\"#800080\">purple</option>\n        <option value=\"#ffc0cb\">pink</option>\n        <option value=\"#ffffff\">white</option>\n        <option value=\"#000000\">black</option>\n        <option value=\"#808080\">gray</option>\n        <option value=\"#8b4513\">saddlebrown</option>\n      </select>\n    </label>\n    <button\n      on:click={() => {\n        shapes.length > 0 ? (shapes = shapes.slice(0, shapes.length - 1)) : \"\";\n      }}\n    >\n      UNDO\n    </button>\n  </div>\n{/if}\n\n<style>\n  svg {\n    overflow: visible;\n    margin: 0 auto;\n    border-style: solid;\n    display: block;\n  }\n  polyline,\n  ellipse {\n    pointer-events: none;\n  }\n\n  .controls > * {\n    margin: 1em;\n  }\n\n  input[type=\"color\"] {\n    padding: 0.2rem;\n    height: 3rem;\n    width: 5rem;\n  }\n  input[type=\"checkbox\"],\n  input[type=\"radio\"] {\n    display: inline;\n  }\n\n  input[type=\"range\"] {\n    box-shadow: none;\n    width: 300px;\n  }\n</style>\n","<script lang=\"ts\">\n  import type { Shape } from \"./interfaces\";\n  import Canvas from \"./Canvas.svelte\";\n  import { my_username, state } from \"./stores\";\n  import { socket } from \"./Websocket\";\n\n  // TODO move my_user to stores\n  $: my_user = $state.users.find((u) => u.username === $my_username);\n  $: prompt = my_user ? my_user.assigned_prompt : \"\";\n\n  $: sent_drawing = $state.drawings.some((d) => d.username === $my_username);\n  let shapes: Shape[] = [];\n\n  let onDone = async function () {\n    if (sent_drawing || !confirm(\"Send Drawing?\")) {\n      return;\n    }\n    console.log(\"sendDrawing:\", shapes, prompt);\n    try {\n      await socket.sendDrawing({\n        shapes: shapes,\n        prompt: prompt,\n        username: $my_username,\n      });\n    } catch (error) {\n      alert(error);\n    }\n    sent_drawing = true;\n  };\n</script>\n\n<h1 class=\"has-text-centered\">{prompt}</h1>\n<Canvas bind:shapes />\n\n<button on:click|once={onDone} disabled={shapes.length === 0}>Done!</button>\n\n<style>\n  h1 {\n    font-size: 4em;\n    color: red;\n    font-weight: 100;\n  }\n  button {\n    width: 100%;\n  }\n</style>\n",null,"import { writable } from '../store';\nimport { now, loop, assign } from '../internal';\nimport { linear } from '../easing';\n\nfunction is_date(obj) {\n    return Object.prototype.toString.call(obj) === '[object Date]';\n}\n\nfunction tick_spring(ctx, last_value, current_value, target_value) {\n    if (typeof current_value === 'number' || is_date(current_value)) {\n        // @ts-ignore\n        const delta = target_value - current_value;\n        // @ts-ignore\n        const velocity = (current_value - last_value) / (ctx.dt || 1 / 60); // guard div by 0\n        const spring = ctx.opts.stiffness * delta;\n        const damper = ctx.opts.damping * velocity;\n        const acceleration = (spring - damper) * ctx.inv_mass;\n        const d = (velocity + acceleration) * ctx.dt;\n        if (Math.abs(d) < ctx.opts.precision && Math.abs(delta) < ctx.opts.precision) {\n            return target_value; // settled\n        }\n        else {\n            ctx.settled = false; // signal loop to keep ticking\n            // @ts-ignore\n            return is_date(current_value) ?\n                new Date(current_value.getTime() + d) : current_value + d;\n        }\n    }\n    else if (Array.isArray(current_value)) {\n        // @ts-ignore\n        return current_value.map((_, i) => tick_spring(ctx, last_value[i], current_value[i], target_value[i]));\n    }\n    else if (typeof current_value === 'object') {\n        const next_value = {};\n        for (const k in current_value)\n            // @ts-ignore\n            next_value[k] = tick_spring(ctx, last_value[k], current_value[k], target_value[k]);\n        // @ts-ignore\n        return next_value;\n    }\n    else {\n        throw new Error(`Cannot spring ${typeof current_value} values`);\n    }\n}\nfunction spring(value, opts = {}) {\n    const store = writable(value);\n    const { stiffness = 0.15, damping = 0.8, precision = 0.01 } = opts;\n    let last_time;\n    let task;\n    let current_token;\n    let last_value = value;\n    let target_value = value;\n    let inv_mass = 1;\n    let inv_mass_recovery_rate = 0;\n    let cancel_task = false;\n    function set(new_value, opts = {}) {\n        target_value = new_value;\n        const token = current_token = {};\n        if (value == null || opts.hard || (spring.stiffness >= 1 && spring.damping >= 1)) {\n            cancel_task = true; // cancel any running animation\n            last_time = now();\n            last_value = new_value;\n            store.set(value = target_value);\n            return Promise.resolve();\n        }\n        else if (opts.soft) {\n            const rate = opts.soft === true ? .5 : +opts.soft;\n            inv_mass_recovery_rate = 1 / (rate * 60);\n            inv_mass = 0; // infinite mass, unaffected by spring forces\n        }\n        if (!task) {\n            last_time = now();\n            cancel_task = false;\n            task = loop(now => {\n                if (cancel_task) {\n                    cancel_task = false;\n                    task = null;\n                    return false;\n                }\n                inv_mass = Math.min(inv_mass + inv_mass_recovery_rate, 1);\n                const ctx = {\n                    inv_mass,\n                    opts: spring,\n                    settled: true,\n                    dt: (now - last_time) * 60 / 1000\n                };\n                const next_value = tick_spring(ctx, last_value, value, target_value);\n                last_time = now;\n                last_value = value;\n                store.set(value = next_value);\n                if (ctx.settled)\n                    task = null;\n                return !ctx.settled;\n            });\n        }\n        return new Promise(fulfil => {\n            task.promise.then(() => {\n                if (token === current_token)\n                    fulfil();\n            });\n        });\n    }\n    const spring = {\n        set,\n        update: (fn, opts) => set(fn(target_value, value), opts),\n        subscribe: store.subscribe,\n        stiffness,\n        damping,\n        precision\n    };\n    return spring;\n}\n\nfunction get_interpolator(a, b) {\n    if (a === b || a !== a)\n        return () => a;\n    const type = typeof a;\n    if (type !== typeof b || Array.isArray(a) !== Array.isArray(b)) {\n        throw new Error('Cannot interpolate values of different type');\n    }\n    if (Array.isArray(a)) {\n        const arr = b.map((bi, i) => {\n            return get_interpolator(a[i], bi);\n        });\n        return t => arr.map(fn => fn(t));\n    }\n    if (type === 'object') {\n        if (!a || !b)\n            throw new Error('Object cannot be null');\n        if (is_date(a) && is_date(b)) {\n            a = a.getTime();\n            b = b.getTime();\n            const delta = b - a;\n            return t => new Date(a + t * delta);\n        }\n        const keys = Object.keys(b);\n        const interpolators = {};\n        keys.forEach(key => {\n            interpolators[key] = get_interpolator(a[key], b[key]);\n        });\n        return t => {\n            const result = {};\n            keys.forEach(key => {\n                result[key] = interpolators[key](t);\n            });\n            return result;\n        };\n    }\n    if (type === 'number') {\n        const delta = b - a;\n        return t => a + t * delta;\n    }\n    throw new Error(`Cannot interpolate ${type} values`);\n}\nfunction tweened(value, defaults = {}) {\n    const store = writable(value);\n    let task;\n    let target_value = value;\n    function set(new_value, opts) {\n        if (value == null) {\n            store.set(value = new_value);\n            return Promise.resolve();\n        }\n        target_value = new_value;\n        let previous_task = task;\n        let started = false;\n        let { delay = 0, duration = 400, easing = linear, interpolate = get_interpolator } = assign(assign({}, defaults), opts);\n        if (duration === 0) {\n            if (previous_task) {\n                previous_task.abort();\n                previous_task = null;\n            }\n            store.set(value = target_value);\n            return Promise.resolve();\n        }\n        const start = now() + delay;\n        let fn;\n        task = loop(now => {\n            if (now < start)\n                return true;\n            if (!started) {\n                fn = interpolate(value, new_value);\n                if (typeof duration === 'function')\n                    duration = duration(value, new_value);\n                started = true;\n            }\n            if (previous_task) {\n                previous_task.abort();\n                previous_task = null;\n            }\n            const elapsed = now - start;\n            if (elapsed > duration) {\n                store.set(value = new_value);\n                return false;\n            }\n            // @ts-ignore\n            store.set(value = fn(easing(elapsed / duration)));\n            return true;\n        });\n        return task.promise;\n    }\n    return {\n        set,\n        update: (fn, opts) => set(fn(target_value, value), opts),\n        subscribe: store.subscribe\n    };\n}\n\nexport { spring, tweened };\n","<script lang=\"ts\">\n  import type { User, Shape } from \"./interfaces\";\n  import { shape_length, interpolated_shape } from \"./shapes\";\n  import { tweened } from \"svelte/motion\";\n  import { my_username, state } from \"./stores\";\n  import { socket } from \"./Websocket\";\n  import Avatar from \"./Avatar.svelte\";\n  import Canvas from \"./Canvas.svelte\";\n\n  function find_user(username: string): User {\n    const user = $state.users.find((u) => u.username === username);\n    if (user) return user;\n    console.error(\"Error: user \" + username + \" not found\");\n    return {\n      username: \"\",\n      score: 0,\n      img_src: \"\",\n      lol_score: 0,\n      proposed_prompt: \"\",\n      assigned_prompt: \"\",\n    };\n  }\n\n  $: my_user = find_user($my_username);\n\n  const current_drawing = $state.drawings.find(\n    (d) => d.prompt === $state.current_prompt\n  ) ?? { shapes: [], username: \"\", prompt: \"\" };\n\n  // TODO split in 3 small components for guess/vote/lol\n\n  let guessed_prompt = \"\";\n  let voted_prompt = \"\";\n\n  $: sent_guess =\n    $state.guesses.some(\n      (g) =>\n        g.guesser_username === $my_username &&\n        g.real_prompt === $state.current_prompt\n    ) ||\n    $state.current_prompt == my_user.proposed_prompt ||\n    $state.current_prompt == my_user.assigned_prompt;\n\n  $: sent_vote =\n    $state.votes.some(\n      (v) =>\n        v.voter_username === $my_username &&\n        v.real_prompt === $state.current_prompt\n    ) ||\n    $state.current_prompt == my_user.proposed_prompt ||\n    $state.current_prompt == my_user.assigned_prompt;\n\n  async function sendGuess() {\n    try {\n      await socket.sendGuess({\n        guessed_prompt: guessed_prompt,\n        real_prompt: $state.current_prompt,\n        guesser_username: $my_username,\n      });\n    } catch (error) {\n      alert(error);\n      return;\n    }\n    guessed_prompt = \"\";\n  }\n\n  async function sendVote() {\n    try {\n      await socket.sendVote({\n        real_prompt: $state.current_prompt,\n        voted_prompt: voted_prompt,\n        voter_username: $my_username,\n      });\n    } catch (error) {\n      alert(error);\n      return;\n    }\n    voted_prompt = \"\";\n  }\n\n  async function sendLOL(voted_prompt: string) {\n    try {\n      await socket.sendLOL({\n        real_prompt: $state.current_prompt,\n        voted_prompt: voted_prompt,\n        voter_username: $my_username,\n      });\n    } catch (error) {\n      alert(error);\n      return;\n    }\n  }\n\n  function possiblePrompts(): string[] {\n    let guesses = $state.guesses.filter(\n      (g) =>\n        g.real_prompt === $state.current_prompt &&\n        g.guesser_username !== $my_username\n    );\n    const prompts = guesses.map((g) => g.guessed_prompt);\n    if ($state.current_prompt !== my_user.proposed_prompt) {\n      prompts.push($state.current_prompt);\n    }\n    prompts.sort();\n    return prompts;\n  }\n\n  $: users_without_guess = $state.users.filter(\n    (u) =>\n      u.proposed_prompt !== $state.current_prompt &&\n      u.username !== current_drawing.username &&\n      !$state.guesses.some(\n        (g) =>\n          g.guesser_username === u.username &&\n          g.real_prompt === $state.current_prompt\n      )\n  );\n\n  $: users_without_vote = $state.users.filter(\n    (u) =>\n      u.proposed_prompt !== $state.current_prompt &&\n      u.username !== current_drawing.username &&\n      !$state.votes.some(\n        (g) =>\n          g.voter_username === u.username &&\n          g.real_prompt === $state.current_prompt\n      )\n  );\n\n  const tween_value = tweened(0);\n  tween_value.set(1, { duration: 10000 });\n\n  let tweened_shapes: Shape[] = [];\n\n  const sum = (arr: number[]): number => {\n    let t = 0;\n    for (let n of arr) t += n;\n    return t;\n  };\n\n  const total_length = sum(current_drawing.shapes.map(shape_length));\n\n  function updateTweenedShapes(value: number, shapes: Shape[]) {\n    tweened_shapes = [];\n    let length_left = Math.floor(value * total_length);\n    for (let shape of shapes) {\n      let s_length = shape_length(shape);\n      if (s_length <= length_left) {\n        tweened_shapes.push(shape);\n        length_left -= s_length;\n      } else {\n        shape = interpolated_shape(shape, length_left);\n        tweened_shapes.push(shape);\n        break;\n      }\n    }\n    tweened_shapes = tweened_shapes;\n  }\n\n  $: updateTweenedShapes($tween_value, current_drawing.shapes);\n</script>\n\n{#if $state.phase === \"guess\"}\n  {#if sent_guess}\n    <h1 class=\"has-text-centered\">Wait for everybody to guess</h1>\n  {:else}\n    <h1 class=\"has-text-centered\">Type your guess for:</h1>\n  {/if}\n{:else if $state.phase === \"vote\"}\n  {#if sent_vote}\n    <h1 class=\"has-text-centered\">Wait for everybody to pick</h1>\n  {:else}\n    <h1 class=\"has-text-centered\">Pick one!</h1>\n  {/if}\n{:else if $state.phase === \"lol vote\"}\n  <h1 class=\"has-text-centered\">Give LOLs!</h1>\n{:else}\n  <h1 class=\"has-text-centered\">UNKNOWN PHASE</h1>\n{/if}\n\n<Canvas shapes={tweened_shapes} editable={false} />\n\n{#if $state.phase === \"guess\"}\n  {#if sent_guess}\n    <h2 class=\"has-text-centered\">Got guesses:</h2>\n    <div class=\"centered-flex\">\n      <Avatar user={find_user(current_drawing.username)} />\n      <Avatar\n        user={$state.users.find(\n          (u) => u.proposed_prompt === $state.current_prompt\n        )}\n      />\n      {#each $state.guesses.filter((g) => g.real_prompt === $state.current_prompt) as guess (guess.guesser_username)}\n        <Avatar user={find_user(guess.guesser_username)} />\n      {/each}\n    </div>\n    <h2 class=\"has-text-centered\">Waiting for:</h2>\n    <div class=\"centered-flex\">\n      {#each users_without_guess as user (user.username)}\n        <Avatar {user} />\n      {/each}\n    </div>\n  {:else}\n    <div class=\"row\">\n      <div class=\"col sm-10\">\n        <div class=\"form-group\">\n          <input\n            bind:value={guessed_prompt}\n            on:keyup={async (key) => {\n              key.code === \"Enter\" ? await sendGuess() : null;\n            }}\n            class=\"input-block\"\n            type=\"text\"\n            placeholder=\"Your guess\"\n            required\n          />\n        </div>\n      </div>\n      <div class=\"col sm-2\">\n        <button on:click={sendGuess} disabled={guessed_prompt.length === 0}>\n          Send!\n        </button>\n      </div>\n    </div>\n  {/if}\n{:else if $state.phase === \"vote\"}\n  {#if sent_vote}\n    <h2 class=\"has-text-centered\">Got votes:</h2>\n    <div class=\"centered-flex\">\n      <Avatar user={find_user(current_drawing.username)} />\n      <Avatar\n        user={$state.users.find(\n          (u) => u.proposed_prompt === $state.current_prompt\n        )}\n      />\n      {#each $state.votes.filter((v) => v.real_prompt === $state.current_prompt) as vote (vote.voter_username)}\n        <Avatar user={find_user(vote.voter_username)} />\n      {/each}\n    </div>\n    <h2 class=\"has-text-centered\">Waiting for:</h2>\n    <div class=\"centered-flex\">\n      {#each users_without_vote as user (user.username)}\n        <Avatar {user} />\n      {/each}\n    </div>\n  {:else}\n    <div class=\"row\">\n      <div class=\"col sm-10 center-text\">\n        {#each possiblePrompts() as prompt}\n          <div\n            class=\"row voterow\"\n            on:click={() => (voted_prompt = prompt)}\n            class:row-selected={voted_prompt === prompt}\n          >\n            <div class=\"col sm-1\">\n              <input\n                id={prompt}\n                type=\"radio\"\n                bind:group={voted_prompt}\n                value={prompt}\n              />\n            </div>\n            <div class=\"col sm-11\">\n              <label for={prompt}>\n                {prompt}\n              </label>\n            </div>\n          </div>\n        {/each}\n      </div>\n      <div class=\"col sm-2 center-text\">\n        <button on:click={sendVote} disabled={!voted_prompt}> Send! </button>\n      </div>\n    </div>\n  {/if}\n{:else if $state.phase === \"lol vote\"}\n  {#each possiblePrompts() as prompt}\n    <div class=\"row\">\n      <div class=\"col sm-6 center-text\">{prompt}</div>\n      <div class=\"col sm-6 center-text\">\n        <button\n          on:click|once={async () => await sendLOL(prompt)}\n          disabled={$state.lol_votes.some(\n            (v) =>\n              v.voter_username === $my_username &&\n              v.real_prompt === $state.current_prompt &&\n              v.voted_prompt === prompt\n          )}\n        >\n          LOL point\n        </button>\n      </div>\n    </div>\n  {/each}\n{/if}\n\n<style>\n  h1 {\n    font-size: 4em;\n    color: red;\n    font-weight: 100;\n  }\n\n  h2 {\n    margin: 0;\n  }\n  .center-text {\n    text-align: center;\n    margin: auto;\n  }\n  .row {\n    padding-top: 1em;\n    max-width: 800px;\n  }\n\n  .voterow {\n    padding-top: 0.3em;\n    border-bottom-left-radius: 515px 1255px;\n    border-bottom-right-radius: 1225px 515px;\n    border-top-left-radius: 1255px 515px;\n    border-top-right-radius: 515px 1225px;\n    border: 2px solid #41403e;\n    background-color: white;\n    box-shadow: 15px 28px 25px -13px rgb(0 0 0 / 20%);\n    transition: all 235ms ease-in-out 0ms;\n  }\n\n  .voterow:hover {\n    transform: translate3d(0, 2px, 0);\n    box-shadow: 2px 8px 8px -5px rgb(0 0 0 / 30%);\n    background-color: rgba(0, 0, 0, 0.05);\n    border-color: black;\n  }\n\n  .row-selected,\n  .row-selected:hover {\n    transform: translate3d(0, 4px, 0);\n    background-color: rgba(220, 220, 255, 0.1);\n    box-shadow: 0px 2px 3px 1px rgb(0 0 0 / 40%);\n    border-color: black;\n  }\n  label {\n    overflow-wrap: break-word;\n  }\n</style>\n","<script lang=\"ts\">\n  import { onMount } from \"svelte\";\n  import { state, my_username } from \"./stores\";\n\n  import { tweened } from \"svelte/motion\";\n\n  const DRAW_TIME = 181;\n\n  const GUESS_TIME = 60;\n  $: VOTE_TIME = 4 * $state.users.length;\n  $: LOL_TIME = 3 * $state.users.length;\n  $: LEADERBOARD_TIME = 2 * $state.users.length;\n  let current_phase = \"login\";\n\n  $: my_user = $state.users.find((u) => u.username === $my_username);\n  $: assigned_prompt = my_user ? my_user.assigned_prompt : \"\";\n  $: proposed_prompt = my_user ? my_user.proposed_prompt : \"\";\n\n  let tot_time = 0;\n  const progress = tweened(0);\n  $: sec_left = Math.floor((1 - $progress) * tot_time);\n\n  function startTimer(duration: number, message = \"\", condition = () => false) {\n    tot_time = duration;\n    console.log(\"TOT TIME IS\", tot_time);\n    progress\n      .set(0, { duration: tot_time ? 100 : 1000 })\n      .then(() => progress.set(1, { duration: tot_time * 1000 }))\n      .then(() => (condition() ? alert(message) : null));\n  }\n\n  function hasNotSentDrawing(): boolean {\n    return !$state.drawings.some((d) => d.username === $my_username);\n  }\n\n  function hasNotSentGuess(): boolean {\n    return !(\n      $state.guesses.some(\n        (g) =>\n          g.guesser_username === $my_username &&\n          g.real_prompt === $state.current_prompt\n      ) ||\n      $state.current_prompt == proposed_prompt ||\n      $state.current_prompt == assigned_prompt\n    );\n  }\n\n  function hasNotSentVote(): boolean {\n    return !(\n      $state.votes.some(\n        (v) =>\n          v.voter_username === $my_username &&\n          v.real_prompt === $state.current_prompt\n      ) ||\n      $state.current_prompt == proposed_prompt ||\n      $state.current_prompt == assigned_prompt\n    );\n  }\n\n  onMount(async () => {\n    state.subscribe((new_state) => {\n      if (current_phase === new_state.phase) {\n        return;\n      }\n      if (new_state.phase === \"draw\") {\n        startTimer(DRAW_TIME, \"Please send your drawing!\", hasNotSentDrawing);\n      } else if (new_state.phase === \"guess\") {\n        startTimer(GUESS_TIME, \"Please send your guess!\", hasNotSentGuess);\n      } else if (new_state.phase === \"vote\") {\n        startTimer(VOTE_TIME, \"Please send your vote!\", hasNotSentVote);\n      } else if (new_state.phase === \"lol vote\") {\n        startTimer(LOL_TIME);\n      } else if (\n        new_state.phase === \"leaderboard\" &&\n        current_phase !== \"leaderboard\"\n      ) {\n        startTimer(LEADERBOARD_TIME);\n      }\n      current_phase = new_state.phase;\n    });\n  });\n</script>\n\n{#if [\"draw\", \"guess\", \"vote\", \"lol vote\", \"leaderboard\"].includes(current_phase)}\n  <h1 class=\"has-text-centered\">{sec_left}</h1>\n  <progress\n    class=\"progress margin-bottom\"\n    class:is-success={$progress < 0.5}\n    class:is-warning={$progress >= 0.5 && $progress < 0.8}\n    class:is-danger={$progress >= 0.8}\n    value={$progress}\n  />\n{/if}\n\n<style>\n  h1 {\n    font-size: 4em;\n    color: red;\n    font-weight: 100;\n  }\n  progress {\n    width: 100%;\n  }\n</style>\n","<script lang=\"ts\">\n  import { state, previousLOLScore, previousScore } from \"./stores\";\n  import Canvas from \"./Canvas.svelte\";\n  import Avatar from \"./Avatar.svelte\";\n  $: current_drawing = $state.drawings.find(\n    (d) => d.prompt === $state.current_prompt\n  ) ?? { shapes: [], username: \"\", prompt: \"\" };\n\n  $: userVotes = new Map(\n    $state.votes\n      .filter((v) => v.real_prompt === $state.current_prompt)\n      .map((v) => [v.voter_username, v.voted_prompt])\n  );\n\n  $: userGuesses = new Map(\n    $state.guesses\n      .filter((g) => g.real_prompt === $state.current_prompt)\n      .map((g) => [g.guesser_username, g.guessed_prompt])\n  );\n\n  $: sortedUsers = [...$state.users].sort(\n    (u1, u2) => u2.score + u2.lol_score - u1.score - u1.lol_score\n  );\n</script>\n\n{#if $state.phase === \"end\"}\n  <h1 class=\"has-text-centered\">THE END!</h1>\n{:else}\n  <Canvas shapes={current_drawing.shapes} editable={false} />\n  <h1 class=\"has-text-centered\">{$state.current_prompt}</h1>\n{/if}\n\n<div class=\"row\">\n  <div class=\"col sm-2 center-text\"><strong>User</strong></div>\n  <div class=\"col sm-2 center-text\"><strong>Score</strong></div>\n  <div class=\"col sm-2 center-text\"><strong>LOLs</strong></div>\n  <div class=\"col sm-3 center-text\">\n    {#if $state.phase === \"leaderboard\"}<strong>Guessed</strong>{/if}\n  </div>\n  <div class=\"col sm-3 center-text\">\n    {#if $state.phase === \"leaderboard\"}<strong>Voted</strong>{/if}\n  </div>\n  {#each sortedUsers as user (user.username)}\n    <div class=\"col sm-2\">\n      <div class=\"centered-flex\">\n        <Avatar {user} />\n      </div>\n    </div>\n    <div class=\"col sm-2 center-text\">\n      {user.score}\n      {#if user.score > ($previousScore.get(user.username) ?? 0) && $state.phase === \"leaderboard\"}\n        <span>+{user.score - ($previousScore.get(user.username) ?? 0)}</span>\n      {/if}\n    </div>\n    <div class=\"col sm-2 center-text\">\n      {user.lol_score}\n      {#if user.lol_score > ($previousLOLScore.get(user.username) ?? 0) && $state.phase === \"leaderboard\"}\n        <span>\n          +{user.lol_score - ($previousLOLScore.get(user.username) ?? 0)}\n        </span>\n      {/if}\n    </div>\n    <div class=\"col sm-3 center-text\">\n      {#if $state.phase === \"leaderboard\"}\n        {#if $state.current_prompt === user.assigned_prompt}\n          <span>ARTIST</span>\n        {:else if $state.current_prompt === user.proposed_prompt}\n          <span>WRITER</span>\n        {:else}\n          {userGuesses.get(user.username) ?? \"\"}\n        {/if}\n      {/if}\n    </div>\n    <div class=\"col sm-3 center-text\">\n      {#if $state.phase === \"leaderboard\"}\n        {userVotes.get(user.username) ?? \"\"}\n      {/if}\n    </div>\n  {/each}\n</div>\n\n<style>\n  h1 {\n    font-size: 4em;\n    color: red;\n    font-weight: 100;\n  }\n  span {\n    color: rgb(22, 212, 22);\n  }\n  .center-text {\n    text-align: center;\n    margin: auto;\n  }\n  .row {\n    padding-top: 1em;\n  }\n</style>\n","<script lang=\"ts\">\n  import type { User } from \"./interfaces\";\n  import Avatar from \"./Avatar.svelte\";\n  import TelegramLogin from \"./TelegramLogin.svelte\";\n  import { socket } from \"./Websocket\";\n  import Draw from \"./Draw.svelte\";\n  import Guess from \"./Guess.svelte\";\n  import Progressbar from \"./Progressbar.svelte\";\n  import { state, my_username } from \"./stores\";\n  import Leaderboard from \"./Leaderboard.svelte\";\n  $: user_list = [...$state.users];\n\n  // TODO move to store, maybe add map\n  function find_user(username: string): User {\n    for (let user of user_list) {\n      if (user.username === username) {\n        return user;\n      }\n    }\n    alert(\"Error: user \" + username + \" not found\");\n    return {\n      username: \"\",\n      score: 0,\n      img_src: \"\",\n      lol_score: 0,\n      proposed_prompt: \"\",\n      assigned_prompt: \"\",\n    };\n  }\n\n  async function startGame() {\n    try {\n      await socket.startGame();\n    } catch (error) {\n      alert(error);\n    }\n  }\n</script>\n\n<div class=\"container\">\n  {#if $my_username === \"\"}\n    <TelegramLogin />\n  {:else if $state.phase === \"login\"}\n    <h1 class=\"has-text-centered\">Waiting for other players</h1>\n    <div class=\"centered-flex\">\n      {#each user_list as user (user.username)}\n        <Avatar {user} />\n      {/each}\n    </div>\n    <button\n      class=\"centered-flex\"\n      on:click={startGame}\n      disabled={user_list.length < 4}\n    >\n      Everybody in!\n    </button>\n  {:else if $state.phase === \"draw\"}\n    {#if $state.drawings.some((d) => d.username === $my_username)}\n      <h1 class=\"has-text-centered\">\n        Waiting for other players to finish drawing, got:\n      </h1>\n      <div class=\"centered-flex\">\n        {#each $state.drawings as drawing (drawing.username)}\n          <Avatar user={find_user(drawing.username)} />\n        {/each}\n      </div>\n      <h1 class=\"has-text-centered\">Waiting for:</h1>\n      <div class=\"centered-flex\">\n        {#each $state.users.filter((u) => !$state.drawings.some((d) => d.username === u.username)) as user (user.username)}\n          <Avatar {user} />\n        {/each}\n      </div>\n    {:else}\n      <h1 class=\"has-text-centered\">Let's draw!</h1>\n      <Draw />\n    {/if}\n  {:else if $state.phase === \"guess\" || $state.phase === \"vote\" || $state.phase === \"lol vote\"}\n    <Guess />\n  {:else if $state.phase === \"leaderboard\" || $state.phase === \"end\"}\n    <Leaderboard />\n  {:else}\n    <h1 class=\"has-text-centered\">UNKNOWN STATE AAAA!!!! {$state.phase}</h1>\n  {/if}\n\n  {#if $my_username !== \"\"}\n    <Progressbar />\n  {/if}\n  <!-- <iframe\n    title=\"music\"\n    id=\"music-iframe\"\n    src=\"https://www.youtube.com/embed/D1RhfadVSXI\"\n  /> -->\n</div>\n\n<style>\n  .container {\n    margin-left: auto;\n    margin-right: auto;\n  }\n</style>\n","import App from \"./App.svelte\";\n\nconst app = new App({\n  target: document.body,\n  props: {},\n});\n\nexport default app;\n"],"names":["noop","identity","x","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","set_style","key","important","style","setProperty","select_option","select","option","__value","selected","select_value","selected_option","querySelector","toggle_class","toggle","classList","current_component","set_current_component","onMount","Error","get_current_component","on_mount","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","flush","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","globals","globalThis","global","outro_and_destroy_block","lookup","update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","n","old_indexes","new_blocks","new_lookup","Map","deltas","child_ctx","get","set","Math","abs","will_move","did_move","m","first","new_block","old_block","new_key","old_key","create_component","mount_component","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","$$props","obj","$$set","keys","username","img_src","user","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","state","users","phase","drawings","guesses","votes","lol_votes","current_prompt","my_username","current_username","new_username","new_state","previousScores","previousLOLScores","score","lol_score","previousScore","previousLOLScore","some","u","socket","protocol","location","hostname","io","on","console","log","prompt","emit","reject","drawing","guess","vote","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","e","rejected","result","done","apply","default_images","floor","random","onTelegramAuth","first_name","last_name","JSON","stringify","photo_url","onManualAuth","alert","toUpperCase","trim","login","error","tg_login","getElementById","login_type","relogin","late_login","code","stroke","width","x1","x2","y1","y2","points","join","y","shapes","editable","cur_shape","is_drawing","slider_value","max","ev","offsetX","offsetY","shiftKey","slice","undefined","my_user","$state","find","$my_username","assigned_prompt","sent_drawing","confirm","sendDrawing","ellipse_length","t","PI","sqrt","shape_length","last_x","last_y","cur_x","cur_y","line_length","interpolated_shape","ratio","interpolated_line","interpolated_ellipse","is_date","prototype","toString","call","get_interpolator","isArray","arr","bi","getTime","delta","interpolators","tweened","defaults","target_value","opts","previous_task","started","delay","duration","easing","linear","interpolate","abort","promise","fulfill","loop","elapsed","voter_username","guesser_username","_a","find_user","proposed_prompt","current_drawing","guessed_prompt","voted_prompt","sendGuess","real_prompt","sendLOL","tween_value","tweened_shapes","total_length","sum","sent_guess","g","sent_vote","v","users_without_guess","users_without_vote","length_left","shape","s_length","updateTweenedShapes","$tween_value","sendVote","prompts","sort","includes","current_phase","tot_time","progress","startTimer","message","condition","hasNotSentDrawing","hasNotSentGuess","hasNotSentVote","VOTE_TIME","LOL_TIME","LEADERBOARD_TIME","sec_left","$progress","userVotes","userGuesses","sortedUsers","u1","u2","user_list","startGame","body"],"mappings":"iCAAA,SAASA,wEACT,MAAMC,EAAWC,GAAKA,EACtB,SAASC,EAAOC,EAAKC,GAEjB,IAAK,MAAMC,KAAKD,EACZD,EAAIE,GAAKD,EAAIC,GACjB,OAAOF,EAUX,SAASG,EAAIC,GACT,OAAOA,IAEX,SAASC,IACL,OAAOC,OAAOC,OAAO,MAEzB,SAASC,EAAQC,GACbA,EAAIC,QAAQP,GAEhB,SAASQ,EAAYC,GACjB,MAAwB,mBAAVA,EAElB,SAASC,EAAeC,EAAGC,GACvB,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAOD,GAAkB,iBAANA,GAAgC,mBAANA,EAyBhF,SAASE,EAAoBC,EAAWC,EAAOC,GAC3CF,EAAUG,GAAGC,WAAWC,KAb5B,SAAmBJ,KAAUK,GACzB,GAAa,MAATL,EACA,OAAOtB,EAEX,MAAM4B,EAAQN,EAAMO,aAAaF,GACjC,OAAOC,EAAME,YAAc,IAAMF,EAAME,cAAgBF,EAQ1BC,CAAUP,EAAOC,IAiFlD,MAAMQ,EAA8B,oBAAXC,OACzB,IAAIC,EAAMF,EACJ,IAAMC,OAAOE,YAAYD,MACzB,IAAME,KAAKF,MACbG,EAAML,EAAYM,GAAMC,sBAAsBD,GAAMrC,EASxD,MAAMuC,EAAQ,IAAIC,IAClB,SAASC,EAAUR,GACfM,EAAMzB,QAAQ4B,IACLA,EAAKC,EAAEV,KACRM,EAAMK,OAAOF,GACbA,EAAKG,OAGM,IAAfN,EAAMO,MACNV,EAAIK,GA0BZ,SAASM,EAAOC,EAAQC,GACpBD,EAAOE,YAAYD,GAEvB,SAASE,EAAOH,EAAQC,EAAMG,GAC1BJ,EAAOK,aAAaJ,EAAMG,GAAU,MAExC,SAASE,EAAOL,GACZA,EAAKM,WAAWC,YAAYP,GAEhC,SAASQ,EAAaC,EAAYC,GAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAWG,OAAQD,GAAK,EACpCF,EAAWE,IACXF,EAAWE,GAAGE,EAAEH,GAG5B,SAASI,EAAQC,GACb,OAAOC,SAASC,cAAcF,GAiBlC,SAASG,EAAYH,GACjB,OAAOC,SAASG,gBAAgB,6BAA8BJ,GAElE,SAASK,EAAKC,GACV,OAAOL,SAASM,eAAeD,GAEnC,SAASE,IACL,OAAOH,EAAK,KAEhB,SAASI,IACL,OAAOJ,EAAK,IAEhB,SAASK,EAAOzB,EAAM0B,EAAOC,EAASC,GAElC,OADA5B,EAAK6B,iBAAiBH,EAAOC,EAASC,GAC/B,IAAM5B,EAAK8B,oBAAoBJ,EAAOC,EAASC,GAuB1D,SAASG,EAAK/B,EAAMgC,EAAWC,GACd,MAATA,EACAjC,EAAKkC,gBAAgBF,GAChBhC,EAAKmC,aAAaH,KAAeC,GACtCjC,EAAKoC,aAAaJ,EAAWC,GAgGrC,SAASI,EAASjB,EAAMC,GACpBA,EAAO,GAAKA,EACRD,EAAKkB,YAAcjB,IACnBD,EAAKC,KAAOA,GAEpB,SAASkB,EAAgBC,EAAOP,GAC5BO,EAAMP,MAAiB,MAATA,EAAgB,GAAKA,EAUvC,SAASQ,EAAUzC,EAAM0C,EAAKT,EAAOU,GACjC3C,EAAK4C,MAAMC,YAAYH,EAAKT,EAAOU,EAAY,YAAc,IAEjE,SAASG,EAAcC,EAAQd,GAC3B,IAAK,IAAItB,EAAI,EAAGA,EAAIoC,EAAOnB,QAAQhB,OAAQD,GAAK,EAAG,CAC/C,MAAMqC,EAASD,EAAOnB,QAAQjB,GAC9B,GAAIqC,EAAOC,UAAYhB,EAEnB,YADAe,EAAOE,UAAW,IAW9B,SAASC,EAAaJ,GAClB,MAAMK,EAAkBL,EAAOM,cAAc,aAAeN,EAAOnB,QAAQ,GAC3E,OAAOwB,GAAmBA,EAAgBH,QA2D9C,SAASK,EAAaxC,EAASC,EAAMwC,GACjCzC,EAAQ0C,UAAUD,EAAS,MAAQ,UAAUxC,GA4KjD,IAAI0C,EACJ,SAASC,EAAsBtF,GAC3BqF,EAAoBrF,EAUxB,SAASuF,EAAQpG,IARjB,WACI,IAAKkG,EACD,MAAM,IAAIG,MAAM,oDACpB,OAAOH,GAMPI,GAAwBtF,GAAGuF,SAASrF,KAAKlB,GAsC7C,MAAMwG,EAAmB,GAEnBC,EAAoB,GACpBC,EAAmB,GACnBC,EAAkB,GAClBC,EAAmBC,QAAQC,UACjC,IAAIC,GAAmB,EAWvB,SAASC,EAAoBhH,GACzB0G,EAAiBxF,KAAKlB,GAK1B,IAAIiH,GAAW,EACf,MAAMC,EAAiB,IAAIlF,IAC3B,SAASmF,IACL,IAAIF,EAAJ,CAEAA,GAAW,EACX,EAAG,CAGC,IAAK,IAAI7D,EAAI,EAAGA,EAAIoD,EAAiBnD,OAAQD,GAAK,EAAG,CACjD,MAAMvC,EAAY2F,EAAiBpD,GACnC+C,EAAsBtF,GACtBuG,EAAOvG,EAAUG,IAIrB,IAFAmF,EAAsB,MACtBK,EAAiBnD,OAAS,EACnBoD,EAAkBpD,QACrBoD,EAAkBY,KAAlBZ,GAIJ,IAAK,IAAIrD,EAAI,EAAGA,EAAIsD,EAAiBrD,OAAQD,GAAK,EAAG,CACjD,MAAMrC,EAAW2F,EAAiBtD,GAC7B8D,EAAeI,IAAIvG,KAEpBmG,EAAeK,IAAIxG,GACnBA,KAGR2F,EAAiBrD,OAAS,QACrBmD,EAAiBnD,QAC1B,KAAOsD,EAAgBtD,QACnBsD,EAAgBU,KAAhBV,GAEJI,GAAmB,EACnBE,GAAW,EACXC,EAAeM,SAEnB,SAASJ,EAAOpG,GACZ,GAAoB,OAAhBA,EAAGyG,SAAmB,CACtBzG,EAAGoG,SACHhH,EAAQY,EAAG0G,eACX,MAAMC,EAAQ3G,EAAG2G,MACjB3G,EAAG2G,MAAQ,EAAE,GACb3G,EAAGyG,UAAYzG,EAAGyG,SAASG,EAAE5G,EAAG6G,IAAKF,GACrC3G,EAAG8G,aAAaxH,QAAQ0G,IAiBhC,MAAMe,EAAW,IAAI/F,IACrB,IAAIgG,EACJ,SAASC,IACLD,EAAS,CACLE,EAAG,EACH/F,EAAG,GACHyF,EAAGI,GAGX,SAASG,IACAH,EAAOE,GACR9H,EAAQ4H,EAAO7F,GAEnB6F,EAASA,EAAOJ,EAEpB,SAASQ,EAAcC,EAAOC,GACtBD,GAASA,EAAMjF,IACf2E,EAAS3F,OAAOiG,GAChBA,EAAMjF,EAAEkF,IAGhB,SAASC,EAAeF,EAAOC,EAAOxF,EAAQ/B,GAC1C,GAAIsH,GAASA,EAAMG,EAAG,CAClB,GAAIT,EAAST,IAAIe,GACb,OACJN,EAASR,IAAIc,GACbL,EAAO7F,EAAEjB,KAAK,KACV6G,EAAS3F,OAAOiG,GACZtH,IACI+B,GACAuF,EAAM/E,EAAE,GACZvC,OAGRsH,EAAMG,EAAEF,IAyShB,MAAMG,EAA6B,oBAAXjH,OAClBA,OACsB,oBAAfkH,WACHA,WACAC,OAMV,SAASC,EAAwBP,EAAOQ,GACpCN,EAAeF,EAAO,EAAG,EAAG,KACxBQ,EAAOzG,OAAOiG,EAAMlD,OAW5B,SAAS2D,GAAkBC,EAAYpB,EAAOqB,EAASC,EAASpB,EAAKqB,EAAML,EAAQpG,EAAM0G,EAASC,EAAmBC,EAAMC,GACvH,IAAId,EAAIO,EAAW1F,OACfkG,EAAIL,EAAK7F,OACTD,EAAIoF,EACR,MAAMgB,EAAc,GACpB,KAAOpG,KACHoG,EAAYT,EAAW3F,GAAG+B,KAAO/B,EACrC,MAAMqG,EAAa,GACbC,EAAa,IAAIC,IACjBC,EAAS,IAAID,IAEnB,IADAvG,EAAImG,EACGnG,KAAK,CACR,MAAMyG,EAAYP,EAAYzB,EAAKqB,EAAM9F,GACnC+B,EAAM6D,EAAQa,GACpB,IAAIxB,EAAQQ,EAAOiB,IAAI3E,GAClBkD,EAIIY,GACLZ,EAAMT,EAAEiC,EAAWlC,IAJnBU,EAAQe,EAAkBjE,EAAK0E,GAC/BxB,EAAMlG,KAKVuH,EAAWK,IAAI5E,EAAKsE,EAAWrG,GAAKiF,GAChClD,KAAOqE,GACPI,EAAOG,IAAI5E,EAAK6E,KAAKC,IAAI7G,EAAIoG,EAAYrE,KAEjD,MAAM+E,EAAY,IAAIlI,IAChBmI,EAAW,IAAInI,IACrB,SAASW,EAAO0F,GACZD,EAAcC,EAAO,GACrBA,EAAM+B,EAAE3H,EAAM4G,GACdR,EAAOkB,IAAI1B,EAAMlD,IAAKkD,GACtBgB,EAAOhB,EAAMgC,MACbd,IAEJ,KAAOf,GAAKe,GAAG,CACX,MAAMe,EAAYb,EAAWF,EAAI,GAC3BgB,EAAYxB,EAAWP,EAAI,GAC3BgC,EAAUF,EAAUnF,IACpBsF,EAAUF,EAAUpF,IACtBmF,IAAcC,GAEdlB,EAAOiB,EAAUD,MACjB7B,IACAe,KAEMG,EAAWpC,IAAImD,IAKf5B,EAAOvB,IAAIkD,IAAYN,EAAU5C,IAAIkD,GAC3C7H,EAAO2H,GAEFH,EAAS7C,IAAImD,GAClBjC,IAEKoB,EAAOE,IAAIU,GAAWZ,EAAOE,IAAIW,IACtCN,EAAS5C,IAAIiD,GACb7H,EAAO2H,KAGPJ,EAAU3C,IAAIkD,GACdjC,MAfAW,EAAQoB,EAAW1B,GACnBL,KAiBR,KAAOA,KAAK,CACR,MAAM+B,EAAYxB,EAAWP,GACxBkB,EAAWpC,IAAIiD,EAAUpF,MAC1BgE,EAAQoB,EAAW1B,GAE3B,KAAOU,GACH5G,EAAO8G,EAAWF,EAAI,IAC1B,OAAOE,EAiMX,SAASiB,GAAiBrC,GACtBA,GAASA,EAAMlG,IAKnB,SAASwI,GAAgB9J,EAAW2B,EAAQI,GACxC,MAAM6E,SAAEA,EAAQlB,SAAEA,EAAQtF,WAAEA,EAAU6G,aAAEA,GAAiBjH,EAAUG,GACnEyG,GAAYA,EAAS2C,EAAE5H,EAAQI,GAE/BoE,EAAoB,KAChB,MAAM4D,EAAiBrE,EAASsE,IAAI9K,GAAK+K,OAAOvK,GAC5CU,EACAA,EAAWC,QAAQ0J,GAKnBxK,EAAQwK,GAEZ/J,EAAUG,GAAGuF,SAAW,KAE5BuB,EAAaxH,QAAQ0G,GAEzB,SAAS+D,GAAkBlK,EAAWsC,GAClC,MAAMnC,EAAKH,EAAUG,GACD,OAAhBA,EAAGyG,WACHrH,EAAQY,EAAGC,YACXD,EAAGyG,UAAYzG,EAAGyG,SAASnE,EAAEH,GAG7BnC,EAAGC,WAAaD,EAAGyG,SAAW,KAC9BzG,EAAG6G,IAAM,IAGjB,SAASmD,GAAWnK,EAAWuC,IACI,IAA3BvC,EAAUG,GAAG2G,MAAM,KACnBnB,EAAiBtF,KAAKL,GA9tBrBkG,IACDA,GAAmB,EACnBH,EAAiBqE,KAAK9D,IA8tBtBtG,EAAUG,GAAG2G,MAAMuD,KAAK,IAE5BrK,EAAUG,GAAG2G,MAAOvE,EAAI,GAAM,IAAO,GAAMA,EAAI,GAEnD,SAAS+H,GAAKtK,EAAWwD,EAAS+G,EAAUC,EAAiBC,EAAWC,EAAO5D,EAAQ,EAAE,IACrF,MAAM6D,EAAmBtF,EACzBC,EAAsBtF,GACtB,MAAM4K,EAAcpH,EAAQkH,OAAS,GAC/BvK,EAAKH,EAAUG,GAAK,CACtByG,SAAU,KACVI,IAAK,KAEL0D,MAAAA,EACAnE,OAAQ5H,EACR8L,UAAAA,EACAI,MAAOzL,IAEPsG,SAAU,GACVtF,WAAY,GACZyG,cAAe,GACfI,aAAc,GACd6D,QAAS,IAAIhC,IAAI6B,EAAmBA,EAAiBxK,GAAG2K,QAAU,IAElExK,UAAWlB,IACX0H,MAAAA,EACAiE,YAAY,GAEhB,IAAIC,GAAQ,EAkBZ,GAjBA7K,EAAG6G,IAAMuD,EACHA,EAASvK,EAAW4K,EAAa,CAACrI,EAAG0I,KAAQC,KAC3C,MAAMrH,EAAQqH,EAAK1I,OAAS0I,EAAK,GAAKD,EAOtC,OANI9K,EAAG6G,KAAOyD,EAAUtK,EAAG6G,IAAIzE,GAAIpC,EAAG6G,IAAIzE,GAAKsB,MACtC1D,EAAG4K,YAAc5K,EAAG0K,MAAMtI,IAC3BpC,EAAG0K,MAAMtI,GAAGsB,GACZmH,GACAb,GAAWnK,EAAWuC,IAEvB0I,IAET,GACN9K,EAAGoG,SACHyE,GAAQ,EACRzL,EAAQY,EAAG0G,eAEX1G,EAAGyG,WAAW4D,GAAkBA,EAAgBrK,EAAG6G,KAC/CxD,EAAQ7B,OAAQ,CAChB,GAAI6B,EAAQ2H,QAAS,CACjB,MAAMC,EA1nClB,SAAkB1I,GACd,OAAO2I,MAAMC,KAAK5I,EAAQ6I,YAynCJC,CAAShI,EAAQ7B,QAE/BxB,EAAGyG,UAAYzG,EAAGyG,SAAS6E,EAAEL,GAC7BA,EAAM3L,QAAQwC,QAId9B,EAAGyG,UAAYzG,EAAGyG,SAAStF,IAE3BkC,EAAQkI,OACRnE,EAAcvH,EAAUG,GAAGyG,UAC/BkD,GAAgB9J,EAAWwD,EAAQ7B,OAAQ6B,EAAQzB,QACnDuE,IAEJhB,EAAsBqF,GA0C1B,MAAMgB,GACFC,WACI1B,GAAkB2B,KAAM,GACxBA,KAAKC,SAAWnN,EAEpBiN,IAAIG,EAAM7L,GACN,MAAMI,EAAauL,KAAK1L,GAAGG,UAAUyL,KAAUF,KAAK1L,GAAGG,UAAUyL,GAAQ,IAEzE,OADAzL,EAAUD,KAAKH,GACR,KACH,MAAM8L,EAAQ1L,EAAU2L,QAAQ/L,IACjB,IAAX8L,GACA1L,EAAU4L,OAAOF,EAAO,IAGpCJ,KAAKO,GA59CT,IAAkBC,EA69CNP,KAAKQ,QA79CCD,EA69CkBD,EA59CG,IAA5B9M,OAAOiN,KAAKF,GAAK5J,UA69ChBqJ,KAAK1L,GAAG4K,YAAa,EACrBc,KAAKQ,MAAMF,GACXN,KAAK1L,GAAG4K,YAAa,sCC5/CD/D,KAAOA,KAAKuF,SAAW,+FAD5BvF,KAAOA,KAAKwF,QAAU,0MAAtBxF,KAAOA,KAAKwF,QAAU,+BACjBxF,KAAOA,KAAKuF,SAAW,oEAL5CE,+HCEX,MAAMC,GAAmB,GAgBzB,SAASC,GAAS9I,EAAO+I,EAAQjO,GAC7B,IAAIkO,EACJ,MAAMC,EAAc,GACpB,SAAS5D,EAAI6D,GACT,GAAInN,EAAeiE,EAAOkJ,KACtBlJ,EAAQkJ,EACJF,GAAM,CACN,MAAMG,GAAaN,GAAiBlK,OACpC,IAAK,IAAID,EAAI,EAAGA,EAAIuK,EAAYtK,OAAQD,GAAK,EAAG,CAC5C,MAAM0K,EAAIH,EAAYvK,GACtB0K,EAAE,KACFP,GAAiBrM,KAAK4M,EAAGpJ,GAE7B,GAAImJ,EAAW,CACX,IAAK,IAAIzK,EAAI,EAAGA,EAAImK,GAAiBlK,OAAQD,GAAK,EAC9CmK,GAAiBnK,GAAG,GAAGmK,GAAiBnK,EAAI,IAEhDmK,GAAiBlK,OAAS,IA0B1C,MAAO,CAAE0G,IAAAA,EAAK3C,OArBd,SAAgBpH,GACZ+J,EAAI/J,EAAG0E,KAoBWrD,UAlBtB,SAAmBtB,EAAKgO,EAAavO,GACjC,MAAMwO,EAAa,CAACjO,EAAKgO,GAMzB,OALAJ,EAAYzM,KAAK8M,GACU,IAAvBL,EAAYtK,SACZqK,EAAOD,EAAM1D,IAAQvK,GAEzBO,EAAI2E,GACG,KACH,MAAMmI,EAAQc,EAAYb,QAAQkB,IACnB,IAAXnB,GACAc,EAAYZ,OAAOF,EAAO,GAEH,IAAvBc,EAAYtK,SACZqK,IACAA,EAAO,SCtDhB,MAAMO,GAAyBT,GAAS,CAC7CU,MAAO,GACPC,MAAO,QACPC,SAAU,GACVC,QAAS,GACTC,MAAO,GACPC,UAAW,GACXC,eAAgB,KAGX,IAAIC,GAAcjB,GAAS,IAC9BkB,GAAmB,GACvBD,GAAYpN,UAAWsN,GAAkBD,GAAmBC,GAE5DV,GAAM5M,UAAWuN,IACf,GAAwB,UAApBA,EAAUT,MAAmB,CAC/B,MAAMU,EAAsC,IAAIlF,IAC1CmF,EAAyC,IAAInF,IACnD,IAAK,IAAI2D,KAAQsB,EAAUV,MACzBW,EAAe9E,IAAIuD,EAAKF,SAAUE,EAAKyB,OACvCD,EAAkB/E,IAAIuD,EAAKF,SAAUE,EAAK0B,WAE5CC,GAAclF,IAAI8E,GAClBK,GAAiBnF,IAAI8E,GAElBD,EAAUV,MAAMiB,KAAMC,GAAMA,EAAEhC,WAAasB,KAC9CD,GAAY1E,IAAI,MAIb,IAAIkF,GAA+CzB,GAAS,IAAI7D,KAC5DuF,GAAkD1B,GAC3D,IAAI7D,KC2CC,MAAM0F,GAAS,IA5EtB,MAEE5C,cACE,MAAM6C,EAA0C,cAA/B7L,SAAS8L,SAASC,SAA2B,KAAO,MACrE9C,KAAK2C,OAASI,EAAG,GAAGH,OAAc7L,SAAS8L,SAASC,iBACpD9C,KAAK2C,OAAOK,GAAG,eAAiBd,IAC9Be,QAAQC,IAAIhB,GACZX,GAAMlE,IAAI6E,KAIdnC,YAAYjJ,EAAc6J,EAAiBwC,GAEzC,OADAnD,KAAK2C,OAAOS,KAAK,QAAStM,EAAM6J,EAASwC,GAClC,IAAIhJ,QAAQ,CAACC,EAASiJ,KAC3BrD,KAAK2C,OAAOK,GAAG,KAAM5I,GACrB4F,KAAK2C,OAAOK,GAAG,QAASK,KAI5BtD,kBAEE,OADAC,KAAK2C,OAAOS,KAAK,cACV,IAAIjJ,QAAQ,CAACC,EAASiJ,KAC3BrD,KAAK2C,OAAOK,GAAG,KAAM5I,GACrB4F,KAAK2C,OAAOK,GAAG,QAASK,KAI5BtD,kBAAkBuD,GAEhB,OADAtD,KAAK2C,OAAOS,KAAK,UAAWE,GACrB,IAAInJ,QAAQ,CAACC,EAASiJ,KAC3BrD,KAAK2C,OAAOK,GAAG,KAAM5I,GACrB4F,KAAK2C,OAAOK,GAAG,QAASK,KAI5BtD,gBAAgBwD,GAEd,OADAvD,KAAK2C,OAAOS,KAAK,QAASG,GACnB,IAAIpJ,QAAQ,CAACC,EAASiJ,KAC3BrD,KAAK2C,OAAOK,GAAG,KAAM5I,GACrB4F,KAAK2C,OAAOK,GAAG,QAASK,KAI5BtD,eAAeyD,GAEb,OADAxD,KAAK2C,OAAOS,KAAK,OAAQI,GAClB,IAAIrJ,QAAQ,CAACC,EAASiJ,KAC3BrD,KAAK2C,OAAOK,GAAG,KAAM5I,GACrB4F,KAAK2C,OAAOK,GAAG,QAASK,KAI5BtD,cAAcyD,GAEZ,OADAxD,KAAK2C,OAAOS,KAAK,WAAYI,GACtB,IAAIrJ,QAAQ,CAACC,EAASiJ,KAC3BrD,KAAK2C,OAAOK,GAAG,KAAM5I,GACrB4F,KAAK2C,OAAOK,GAAG,QAASK,KAI5BtD,cAAcjJ,GAEZ,OADAkJ,KAAK2C,OAAOS,KAAK,UAAWtM,GACrB,IAAIqD,QAAQ,CAACC,EAASiJ,KAC3BrD,KAAK2C,OAAOK,GAAG,KAAM5I,GACrB4F,KAAK2C,OAAOK,GAAG,QAASK,KAI5BtD,iBAAiBjJ,EAAc6J,GAE7B,OADAX,KAAK2C,OAAOS,KAAK,aAActM,EAAM6J,GAC9B,IAAIxG,QAAQ,CAACC,EAASiJ,KAC3BrD,KAAK2C,OAAOK,GAAG,KAAM5I,GACrB4F,KAAK2C,OAAOK,GAAG,QAASK,qHC+IflI,KAAOqG,2BAAZ7K,uRASQwE,kDAZQ,gBAAgB,wEADhBA,iEAYkBA,+LAZlBA,mGAYFA,0CARTA,KAAOqG,cAAZ7K,+HAAAA,iBAJgBwE,eAaRA,oBAD0BA,28BA1CtBA,oDAaAA,2GASAA,qCAtBAA,UAAAA,eAaAA,01CAhEAA,oDAaAA,mCAUJA,qHAQEA,qCA/BEA,UAAAA,eAaAA,qBAUJA,UAAAA,6FAgELA,MAAKuF,8DADOvF,MAAKuF,+EACjBvF,MAAKuF,kCADOvF,MAAKuF,sGA7FR,UAAjBvF,KAAOsG,SAuCa,UAAftG,QASe,eAAfA,gPA7KYsI,EAAazD,MAAQA,KAAKyD,oBAAwBC,EAASC,EAAYC,EAAGC,cAEhFD,IAAMA,EAAIzJ,oBAAoBC,EAASiJ,YACtCS,EAAU9L,OAAe+L,EAAKF,EAAUlH,KAAK3E,UAAkBgM,GAAKX,EAAOW,aAC3EC,EAASjM,OAAe+L,EAAKF,EAAiB,MAAE7L,UAAkBgM,GAAKX,EAAOW,aAC9ED,EAAKG,OAJHlM,EAIakM,EAAOC,KAAO/J,EAAQ8J,EAAOlM,QAJ1CA,EAIyDkM,EAAOlM,MAJhDA,aAAiB4L,EAAI5L,MAAY4L,YAAYxJ,GAAWA,EAAQpC,OAITuG,KAAKuF,EAAWG,GAClGF,GAAMF,EAAYA,EAAUO,MAAMV,EAASC,QAAmBhH,gBAMlE+D,EAAW,GACXyC,EAAS,SACPkB,GACF,8EACA,gFACA,+EACA,iFACA,iFACA,6EACA,4EACA,6EACA,gFACA,mEACA,6EACA,kFAEA1D,EAAU0D,EAAe/G,KAAKgH,MAAMhH,KAAKiH,SAAWF,EAAe1N,kBAO9D6N,EAAe5D,UACb6C,EAAUzD,oCACbU,EAAWE,EAAKF,UAAYE,EAAK6D,WAAa,IAAM7D,EAAK8D,WACzDzB,QAAQC,IAAIyB,KAAKC,UAAUhE,EAAM,KAAM,QACvCD,EAAUC,EAAKiE,WAAalE,GAC5BsC,QAAQC,IAAI,cAAgBvC,SACtBmE,gBAGLA,WACErB,EAAUzD,oCACRmD,cACD4B,MAAM,2BAGLrE,cACDqE,MAAM,sBAGLpE,cACDoE,MAAM,eAGV9B,QAAQC,IAAI,mBACZC,EAASA,EAAO6B,cAAcC,kBAEpBtC,GAAOuC,MAAMxE,EAAUC,EAASwC,SAEnCgC,eACHJ,MAAMI,GAGVpD,GAAY1E,IAAIqD,GAChBuC,QAAQC,IAAI,cAAexC,EAAUC,EAASwC,OAC1CiC,EAAWrO,SAASsO,eAAe,4BACnCD,MAAAA,SAAoDA,EAAS/O,aAC7D+O,EAAS/O,WAAWC,YAAY8O,MA1C5C7D,GAAM5M,UAAWuN,SACNA,EAAUV,MAAMiB,KAAMC,GAAMA,EAAE/B,SAAWA,QAC5CA,EACI0D,EAAe/G,KAAKgH,MAAMhH,KAAKiH,SAAWF,EAAe1N,gBAsFjE2O,EAAa,QACjB5L,MAAc+J,oCAEV3O,OAAO0P,eAAiBA,2CA9CjBf,EAAUzD,oCACRU,cACDqE,MAAM,4BAIApC,GAAO4C,QAAQ7E,SAElByE,eACHJ,MAAMI,GAGVpD,GAAY1E,IAAIqD,GAChBuC,QAAQC,IAAI,gBAAiBxC,OACzB0E,EAAWrO,SAASsO,eAAe,4BACnCD,MAAAA,SAAoDA,EAAS/O,aAC7D+O,EAAS/O,WAAWC,YAAY8O,yBAIjC3B,EAAUzD,oCACRU,cACDqE,MAAM,sBAGLpE,cACDoE,MAAM,yBAIApC,GAAO6C,WAAW9E,EAAUC,SAE/BwE,eACHJ,MAAMI,GAGVpD,GAAY1E,IAAIqD,GAChBuC,QAAQC,IAAI,mBAAoBxC,EAAUC,OACtCyE,EAAWrO,SAASsO,eAAe,4BACnCD,MAAAA,SAAoDA,EAAS/O,aAC7D+O,EAAS/O,WAAWC,YAAY8O,kBAiBtB1E,gCAaAC,gCAUJwC,qBAID1K,GAAsB,UAAbA,EAAIgN,KAAmBX,IAAiB,aAOrCQ,EAAa,sBAGbA,EAAa,mBAKfA,EAAa,sBASlB5E,gCAaAC,6BAYK2E,EAAa,yBAKd5E,gNCzGJvF,MAAMqD,KAChBrD,MAAMuK,OACN,qBAAkBvK,MAAMuK,2BAAwBvK,MAAMwK,mBACrDxK,MAAMyK,GAAKzK,MAAM0K,IAAM,eACvB1K,MAAM2K,GAAK3K,MAAM4K,IAAM,cACxBzI,KAAKC,IAAIpC,MAAMyK,GAAKzK,MAAM0K,IAAM,cAChCvI,KAAKC,IAAIpC,MAAM2K,GAAK3K,MAAM4K,IAAM,yEANtB5K,MAAMqD,KAChBrD,MAAMuK,OACN,2BAAkBvK,MAAMuK,iCAAwBvK,MAAMwK,qBACrDxK,MAAMyK,GAAKzK,MAAM0K,IAAM,8BACvB1K,MAAM2K,GAAK3K,MAAM4K,IAAM,6BACxBzI,KAAKC,IAAIpC,MAAMyK,GAAKzK,MAAM0K,IAAM,6BAChCvI,KAAKC,IAAIpC,MAAM2K,GAAK3K,MAAM4K,IAAM,6FAftB5K,MAAMqD,KAChBrD,MAAMuK,OACN,qBAAkBvK,MAAMuK,2BAAwBvK,MAAMwK,sBAClDxK,MAAM6K,OAAO7H,QAA6B8H,KAAK,yIAHzC9K,MAAMqD,KAChBrD,MAAMuK,OACN,2BAAkBvK,MAAMuK,iCAAwBvK,MAAMwK,oBAClDxK,MAAM6K,OAAO7H,QAA6B8H,KAAK,kFALvC,aAAf9K,MAAM+E,QASc,YAAf/E,MAAM+E,sUAkBL/E,KAAUwK,YASJxK,KAAUqD,WAoBjBrD,KAAUuK,w0DAEEvK,KAAUuK,wMA9BIvK,qCAMhBA,KAAUqD,4EAQZrD,KAAU+E,uDAOV/E,KAAU+E,iEAQM/E,KAAUuK,iHACtBvK,KAAUuK,6NA/BrBvK,KAAUwK,6BACexK,sBAMhBA,KAAUqD,oBAEbrD,KAAUqD,8CAMTrD,KAAU+E,kCAOV/E,KAAU+E,oBAOlB/E,KAAUuK,6BACcvK,KAAUuK,iBACtBvK,KAAUuK,iJA3D3BvK,SAAiBA,KAAQA,MAAaA,0BAA3CxE,qCAwBCwE,mRAlCsBA,uBAAqBA,sBAGhCA,oBACFA,sBACEA,uBACCA,4CAIRA,SAAiBA,KAAQA,MAAaA,aAA3CxE,+HAAAA,OAwBCwE,qJAlB8BnI,EAAGkT,QAAUlT,KAAKkT,kCArG1CC,kBACAC,GAAW,KAClBC,GACAnG,KAAM,WACNwF,OAAQ,UACRC,MAAO,EACPK,UACAxH,MAAM,GAEN8H,GAAa,MAwEbC,EAAe,2GANAZ,qBAOhBU,EAAUV,OAPMA,EAOYY,GALvBjJ,KAAKkJ,IAAI,EAAGb,EAAQ,IACpBrI,KAAKkJ,IAAI,EAAGb,EAAQ,IACpBrI,KAAKkJ,IAAI,EAAGb,EAAQ,iCApEnBW,cAGLA,GAAa,GACLD,EAAUnG,UACT,cACGmG,EAAUL,OAAOrP,OAAS,mBAI7B,aACG0P,EAAUP,KAAOO,EAAUN,IAAMM,EAAUT,KAAOS,EAAUR,UAKxEM,EAAO3R,KAAKhB,OAAOP,UAAWoT,sBAGbI,MACZL,aAGLE,GAAa,GACLD,EAAUnG,UACT,eACDmG,EAAUL,SAAWS,EAAGC,QAASD,EAAGE,uBAEnC,cACDN,EAAUP,OAAKO,EAAUN,GAAKU,EAAGE,kBACjCN,EAAUT,OAAKS,EAAUR,GAAKY,EAAGC,yBAIxBD,MACZH,SAGGD,EAAUnG,UACT,WACGuG,EAAGG,aACHP,EAAUL,QAAUK,EAAUL,OAAO,IAAKS,EAAGC,QAASD,EAAGE,cAGzDN,EAAUL,OAAOxR,MAAMiS,EAAGC,QAASD,EAAGE,mCAIzC,cACDN,EAAUN,GAAKU,EAAGE,eAClBN,EAAUR,GAAKY,EAAGC,sBAIXD,GACA,QAAXA,EAAGhO,SACH4N,EAAU7H,MAAO,eAGRiI,GACE,QAAXA,EAAGhO,SACH4N,EAAU7H,MAAO,iBN2OzB,IAAmBxG,EAAAA,aMvLqBuO,ENwLnB,KAAVvO,EAAe,MAAQA,qBMlLVqO,EAAU7H,4CAQZ6H,EAAUnG,iDAOVmG,EAAUnG,4CAQMmG,EAAUX,4CACtBW,EAAUX,mCAiB5BS,EAAOxP,OAAS,OAAKwP,EAASA,EAAOU,MAAM,EAAGV,EAAOxP,OAAS,oPN+qCtE,SAAcxC,EAAW2C,EAAMzC,GAC3B,MAAM8L,EAAQhM,EAAUG,GAAGuK,MAAM/H,QACnBgQ,IAAV3G,IACAhM,EAAUG,GAAG0K,MAAMmB,GAAS9L,EAC5BA,EAASF,EAAUG,GAAG6G,IAAIgF,wCOxzCHhF,4HAG4B,IAAlBA,KAAOxE,gIAAzBwE,+CAHQA,iBP8oB/B,IAA4B7H,+BAAAA,WACxB2G,EAAgBzF,KAAKlB,+BO5oBkC,IAAlB6H,KAAOxE,0NA1C1B8M,EAAazD,MAAQA,KAAKyD,oBAAwBC,EAASC,EAAYC,EAAGC,cAEhFD,IAAMA,EAAIzJ,oBAAoBC,EAASiJ,YACtCS,EAAU9L,OAAe+L,EAAKF,EAAUlH,KAAK3E,UAAkBgM,GAAKX,EAAOW,aAC3EC,EAASjM,OAAe+L,EAAKF,EAAiB,MAAE7L,UAAkBgM,GAAKX,EAAOW,aAC9ED,EAAKG,OAJHlM,EAIakM,EAAOC,KAAO/J,EAAQ8J,EAAOlM,QAJ1CA,EAIyDkM,EAAOlM,MAJhDA,aAAiB4L,EAAI5L,MAAY4L,YAAYxJ,GAAWA,EAAQpC,OAITuG,KAAKuF,EAAWG,GAClGF,GAAMF,EAAYA,EAAUO,MAAMV,EAASC,QAAmBhH,sBAWlEwJ,gDAHDY,EAAUC,EAAOxF,MAAMyF,KAAMvE,GAAMA,EAAEhC,WAAawG,uBAClD/D,EAAS4D,EAAUA,EAAQI,gBAAkB,oBAC7CC,EAAeJ,EAAOtF,SAASe,KAAM7L,GAAMA,EAAE8J,WAAawG,4BAGlDzD,EAAUzD,oCACToH,GAAiBC,QAAQ,kBAG7BpE,QAAQC,IAAI,eAAgBiD,EAAQhD,aAE1BR,GAAO2E,aACDnB,OAAAA,EACAhD,OAAAA,EACRzC,SAAUwG,UAGX/B,GACHJ,MAAMI,GAEViC,GAAe,kGChCvB,MAWMG,GAAkBvD,IAEtB,MAAMhQ,EAAIsJ,KAAKC,IAAIyG,EAAE6B,GAAK7B,EAAE4B,IAAM,EAC5B3R,EAAIqJ,KAAKC,IAAIyG,EAAE+B,GAAK/B,EAAE8B,IAAM,EAC5B0B,IAAMxT,EAAIC,IAAMD,EAAIC,KAAO,EACjC,OAAOqJ,KAAKmK,IAAMzT,EAAIC,IAAM,EAAK,EAAIuT,GAAM,GAAKlK,KAAKoK,KAAK,EAAI,EAAIF,MAGvDG,GAAgBvG,GAChB,aAAXA,EAAElB,KApBgB,CAAC8F,IACnB,GAAsB,IAAlBA,EAAOrP,OAAc,OAAO,EAChC,IAAI6Q,EAAI,GACHI,EAAQC,GAAU7B,EAAO,GAC9B,IAAK,IAAK8B,EAAOC,KAAU/B,EACzBwB,GAAKlK,KAAKoK,MAAMK,EAAQF,IAAW,GAAKC,EAAQF,IAAW,GAC3DA,EAASE,EACTD,EAASE,EAEX,OAAOP,GAWiBQ,CAAY5G,EAAE4E,QAAUuB,GAAenG,GAqCpD6G,GAAqB,CAAC7G,EAAUxB,IAChC,aAAXwB,EAAElB,KA3BsB,EAACkB,EAAaxB,KACtC,IAAIoG,EAA6B,GACjC,GAAI5E,EAAE4E,OAAOrP,OAAS,EACpB,OAAOyK,EAET,IAAKwG,EAAQC,GAAUzG,EAAE4E,OAAO,GAChC,IAAK,IAAK8B,EAAOC,KAAU3G,EAAE4E,OAAQ,CACnC,IAAIwB,EAAIlK,KAAKoK,MAAMK,EAAQF,IAAW,GAAKC,EAAQF,IAAW,GAC9D,KAAIJ,GAAK5H,GAGF,CACL,IAAIsI,EAAQtI,EAAI4H,EAChBM,EAAQF,GAAUE,EAAQF,GAAUM,EACpCH,EAAQF,GAAUE,EAAQF,GAAUK,EACpClC,EAAOxR,KAAK,CAACsT,EAAOC,IACpB,MAPA/B,EAAOxR,KAAK,CAACsT,EAAOC,IACpBnI,GAAK4H,EAQPI,EAASE,EACTD,EAASE,EAEX,sCACK3G,IACH4E,OAAAA,KAIsBmC,CAAkB/G,EAAGxB,GApClB,EAACwB,EAAYxB,KACxC,MAAMsI,EAAQtI,EAAI2H,GAAenG,GACjC,sCACKA,IACHyE,GAAIzE,EAAEwE,IAAMxE,EAAEyE,GAAKzE,EAAEwE,IAAMsC,EAC3BnC,GAAI3E,EAAE0E,IAAM1E,EAAE2E,GAAK3E,EAAE0E,IAAMoC,KA+BqBE,CAAqBhH,EAAGxB,GCxD5E,SAASyI,GAAQ9H,GACb,MAA+C,kBAAxC/M,OAAO8U,UAAUC,SAASC,KAAKjI,GA4G1C,SAASkI,GAAiBzU,EAAGC,GACzB,GAAID,IAAMC,GAAKD,GAAMA,EACjB,MAAO,IAAMA,EACjB,MAAMkM,SAAclM,EACpB,GAAIkM,WAAgBjM,GAAKuL,MAAMkJ,QAAQ1U,KAAOwL,MAAMkJ,QAAQzU,GACxD,MAAM,IAAI0F,MAAM,+CAEpB,GAAI6F,MAAMkJ,QAAQ1U,GAAI,CAClB,MAAM2U,EAAM1U,EAAEkK,IAAI,CAACyK,EAAIlS,IACZ+R,GAAiBzU,EAAE0C,GAAIkS,IAElC,OAAOpB,GAAKmB,EAAIxK,IAAI7K,GAAMA,EAAGkU,IAEjC,GAAa,WAATtH,EAAmB,CACnB,IAAKlM,IAAMC,EACP,MAAM,IAAI0F,MAAM,yBACpB,GAAI0O,GAAQrU,IAAMqU,GAAQpU,GAAI,CAC1BD,EAAIA,EAAE6U,UAEN,MAAMC,GADN7U,EAAIA,EAAE4U,WACY7U,EAClB,OAAOwT,GAAK,IAAIvS,KAAKjB,EAAIwT,EAAIsB,GAEjC,MAAMrI,EAAOjN,OAAOiN,KAAKxM,GACnB8U,EAAgB,GAItB,OAHAtI,EAAK7M,QAAQ6E,IACTsQ,EAActQ,GAAOgQ,GAAiBzU,EAAEyE,GAAMxE,EAAEwE,MAE7C+O,IACH,MAAMtD,EAAS,GAIf,OAHAzD,EAAK7M,QAAQ6E,IACTyL,EAAOzL,GAAOsQ,EAActQ,GAAK+O,KAE9BtD,GAGf,GAAa,WAAThE,EAAmB,CACnB,MAAM4I,EAAQ7U,EAAID,EAClB,OAAOwT,GAAKxT,EAAIwT,EAAIsB,EAExB,MAAM,IAAInP,MAAM,sBAAsBuG,YAE1C,SAAS8I,GAAQhR,EAAOiR,EAAW,IAC/B,MAAM7U,EAAQ0M,GAAS9I,GACvB,IAAIxC,EACA0T,EAAelR,EACnB,SAASqF,EAAI6D,EAAWiI,GACpB,GAAa,MAATnR,EAEA,OADA5D,EAAMiJ,IAAIrF,EAAQkJ,GACX/G,QAAQC,UAEnB8O,EAAehI,EACf,IAAIkI,EAAgB5T,EAChB6T,GAAU,GACVC,MAAEA,EAAQ,EAACC,SAAEA,EAAW,IAAGC,OAAEA,EAASC,EAAMC,YAAEA,EAAcjB,IAAqBxV,EAAOA,EAAO,GAAIgW,GAAWE,GAClH,GAAiB,IAAbI,EAMA,OALIH,IACAA,EAAcO,QACdP,EAAgB,MAEpBhV,EAAMiJ,IAAIrF,EAAQkR,GACX/O,QAAQC,UAEnB,MAAM2G,EAAQhM,IAAQuU,EACtB,IAAIhW,EAuBJ,OAtBAkC,ETPR,SAAcnB,GACV,IAAImB,EAGJ,OAFmB,IAAfH,EAAMO,MACNV,EAAIK,GACD,CACHqU,QAAS,IAAIzP,QAAQ0P,IACjBxU,EAAMwF,IAAIrF,EAAO,CAAEC,EAAGpB,EAAUsB,EAAGkU,MAEvC9J,QACI1K,EAAMK,OAAOF,KSFVsU,CAAK/U,IACR,GAAIA,EAAMgM,EACN,OAAO,EACNsI,IACD/V,EAAKoW,EAAY1R,EAAOkJ,GACA,mBAAbqI,IACPA,EAAWA,EAASvR,EAAOkJ,IAC/BmI,GAAU,GAEVD,IACAA,EAAcO,QACdP,EAAgB,MAEpB,MAAMW,EAAUhV,EAAMgM,EACtB,OAAIgJ,EAAUR,GACVnV,EAAMiJ,IAAIrF,EAAQkJ,IACX,IAGX9M,EAAMiJ,IAAIrF,EAAQ1E,EAAGkW,EAAOO,EAAUR,MAC/B,KAEJ/T,EAAKoU,QAEhB,MAAO,CACHvM,IAAAA,EACA3C,OAAQ,CAACpH,EAAI6V,IAAS9L,EAAI/J,EAAG4V,EAAclR,GAAQmR,GACnDxU,UAAWP,EAAMO,osBCxDlBwG,sNANAA,m0BAiHEA,6BAALxE,iLAAKwE,gBAALxE,uIAAAA,8GAlDGwE,0WA3CAA,8UA+FkCA,2PAIrBA,KAAO0G,UAAUY,gOAAjBtH,KAAO0G,UAAUY,yFAlCtBtH,6BAALxE,mNAuBqCwE,2MAArBA,gDAvBXA,gBAALxE,+HAAAA,uBAuBqCwE,6JA1C3BA,KAAUA,MAAgBuF,mCAEhCvF,KAAOqG,MAAMyF,qBAId9L,KAAOyG,MAAMxD,yBAAgEjD,MAAK6O,+BAAvFrT,gEAMKwE,gBAA4BA,MAAKuF,yBAAtC/J,6rBAVMwE,KAAOqG,MAAMyF,yCAId9L,KAAOyG,MAAMxD,8EAMbjD,oHANLxE,oCAMAA,wVAuBSwE,uJARGA,uCAGGA,6EAIGA,2HAXMA,OAAiBA,4DAMrBA,oIAAAA,qCANIA,OAAiBA,gIAhB3BA,KAAUA,MAAK6O,iJAAf7O,KAAUA,MAAK6O,ysBAjBoC,IAA1B7O,KAAexE,2GAZtCwE,2FAYEA,wCAZFA,UAAAA,qBAYiD,IAA1BA,KAAexE,yJAjC1CwE,KAAUA,MAAgBuF,mCAEhCvF,KAAOqG,MAAMyF,qBAId9L,KAAOwG,QAAQvD,yBAAiEjD,MAAM8O,iCAA3FtT,gEAMKwE,gBAA6BA,MAAKuF,yBAAvC/J,+rBAVMwE,KAAOqG,MAAMyF,yCAId9L,KAAOwG,QAAQvD,8EAMfjD,oHANLxE,oCAMAA,iWALcwE,KAAUA,MAAM8O,mJAAhB9O,KAAUA,MAAM8O,wdA/BhB,UAAjB9O,KAAOsG,SAMe,SAAjBtG,KAAOsG,SAMU,aAAjBtG,KAAOsG,sDAMDtG,eAA0B,mDAEpB,UAAjBA,KAAOsG,QA2Ce,SAAjBtG,KAAOsG,QAkDU,aAAjBtG,KAAOsG,6RA/FDtG,yXAtJZ+O,EATkBzG,EAAazD,MAAQA,KAAKyD,oBAAwBC,EAASC,EAAYC,EAAGC,cAEhFD,IAAMA,EAAIzJ,oBAAoBC,EAASiJ,YACtCS,EAAU9L,OAAe+L,EAAKF,EAAUlH,KAAK3E,UAAkBgM,GAAKX,EAAOW,aAC3EC,EAASjM,OAAe+L,EAAKF,EAAiB,MAAE7L,UAAkBgM,GAAKX,EAAOW,aAC9ED,EAAKG,OAJHlM,EAIakM,EAAOC,KAAO/J,EAAQ8J,EAAOlM,QAJ1CA,EAIyDkM,EAAOlM,MAJhDA,aAAiB4L,EAAI5L,MAAY4L,YAAYxJ,GAAWA,EAAQpC,OAITuG,KAAKuF,EAAWG,GAClGF,GAAMF,EAAYA,EAAUO,MAAMV,EAASC,QAAmBhH,qBAW7DwN,EAAUzJ,SACTE,EAAOoG,EAAOxF,MAAMyF,KAAMvE,GAAMA,EAAEhC,WAAaA,UACjDE,IAEJqC,QAAQkC,MAAM,eAAiBzE,EAAW,eAEtCA,SAAU,GACV2B,MAAO,EACP1B,QAAS,GACT2B,UAAW,EACX8H,gBAAiB,GACjBjD,gBAAiB,WAInBkD,EAA6F,QAA1EH,EAAKlD,EAAOtF,SAASuF,KAAMrQ,GAAMA,EAAEuM,SAAW6D,EAAOlF,2BAA6BoI,EAAgBA,GAAO/D,UAAYzF,SAAU,GAAIyC,OAAQ,QAEhKmH,EAAiB,GACjBC,EAAe,YAWVC,WACE/G,EAAUzD,0CAEH2C,GAAO6H,WACOF,eAAAA,EAChBG,YAAazD,EAAOlF,eACpBmI,iBAAkB/C,UAGnB/B,eACHJ,MAAMI,OAGVmF,EAAiB,gBAmBhBI,EAAQH,UACN9G,EAAUzD,0CAEH2C,GAAO+H,SACTD,YAAazD,EAAOlF,eACNyI,aAAAA,EACdP,eAAgB9C,UAGjB/B,eACHJ,MAAMI,aAuBZwF,EAAc3B,GAAQ,uBAC5B2B,EAAYtN,IAAI,GAAKkM,SAAU,UAC3BqB,WAOEC,EANOlC,CAAAA,QACLnB,EAAI,UACC3K,KAAK8L,EACVnB,GAAK3K,SACF2K,GAEUsD,CAAIT,EAAgBlE,OAAOhI,IAAIwJ,kEAzFjDZ,EAAUoD,EAAUjD,iCAKpB6D,EACC/D,EAAOrF,QAAQc,KAAMuI,GAAMA,EAAEf,mBAAqB/C,GAC9C8D,EAAEP,cAAgBzD,EAAOlF,iBACzBkF,EAAOlF,gBAAkBiF,EAAQqD,iBACjCpD,EAAOlF,gBAAkBiF,EAAQI,8CACtC8D,EACCjE,EAAOpF,MAAMa,KAAMyI,GAAMA,EAAElB,iBAAmB9C,GAC1CgE,EAAET,cAAgBzD,EAAOlF,iBACzBkF,EAAOlF,gBAAkBiF,EAAQqD,iBACjCpD,EAAOlF,gBAAkBiF,EAAQI,sCA0DtCgE,EAAsBnE,EAAOxF,MAAMpD,OAAQsE,GAAMA,EAAE0H,kBAAoBpD,EAAOlF,gBAC7EY,EAAEhC,WAAa2J,EAAgB3J,WAC9BsG,EAAOrF,QAAQc,KAAMuI,GAAMA,EAAEf,mBAAqBvH,EAAEhC,UACjDsK,EAAEP,cAAgBzD,EAAOlF,uCAC9BsJ,EAAqBpE,EAAOxF,MAAMpD,OAAQsE,GAAMA,EAAE0H,kBAAoBpD,EAAOlF,gBAC5EY,EAAEhC,WAAa2J,EAAgB3J,WAC9BsG,EAAOpF,MAAMa,KAAMuI,GAAMA,EAAEhB,iBAAmBtH,EAAEhC,UAC7CsK,EAAEP,cAAgBzD,EAAOlF,oDAWJ9J,EAAOmO,OAChCyE,UACIS,EAAc/N,KAAKgH,MAAMtM,EAAQ6S,WAC5BS,KAASnF,OACVoF,EAAW5D,GAAa2D,QACxBC,GAAYF,IAKZC,EAAQrD,GAAmBqD,EAAOD,GAClCT,EAAepW,KAAK8W,SALpBV,EAAepW,KAAK8W,GACpBD,GAAeE,SAUxBC,CAAoBC,EAAcpB,EAAgBlE,oDA3E1C1C,EAAUzD,0CAEH2C,GAAO+I,UACTjB,YAAazD,EAAOlF,eACNyI,aAAAA,EACdP,eAAgB9C,UAGjB/B,eACHJ,MAAMI,OAGVoF,EAAe,2BAqBboB,EAFQ3E,EAAOrF,QAAQvD,OAAQ4M,GAAMA,EAAEP,cAAgBzD,EAAOlF,gBAChEkJ,EAAEf,mBAAqB/C,GACH/I,IAAK6M,GAAMA,EAAEV,uBACjCtD,EAAOlF,iBAAmBiF,EAAQqD,iBAClCuB,EAAQnX,KAAKwS,EAAOlF,gBAExB6J,EAAQC,OACDD,KAmEAjJ,GAAMA,EAAE0H,kBAAoBpD,EAAOlF,eAGVkJ,GAAMA,EAAEP,cAAgBzD,EAAOlF,0BAe3CwI,+BAEG,UAAb7R,EAAIgN,YAAyB+E,KAuBhC9H,GAAMA,EAAE0H,kBAAoBpD,EAAOlF,eAGZoJ,GAAMA,EAAET,cAAgBzD,EAAOlF,0BAuBrCyI,mCAPCA,EAAepH,MAgC/B+H,IACCA,EAAElB,iBAAmB9C,GACrBgE,EAAET,cAAgBzD,EAAOlF,gBACzBoJ,EAAEX,eAAiBpH,iBALUuH,EAAQvH,kIC1LlBhI,yIAMtBA,sBAHWA,KAAY,qBACZA,MAAa,IAAOA,KAAY,oBACjCA,MAAa,+DALDA,oBAMtBA,4BAHWA,KAAY,0BACZA,MAAa,IAAOA,KAAY,yBACjCA,MAAa,4DAN5B,OAAQ,QAAS,OAAQ,WAAY,eAAe0Q,SAAS1Q,2FAA7D,OAAQ,QAAS,OAAQ,WAAY,eAAe0Q,SAAS1Q,uLAzE7CsI,EAAazD,MAAQA,KAAKyD,oBAAwBC,EAASC,EAAYC,EAAGC,cAEhFD,IAAMA,EAAIzJ,oBAAoBC,EAASiJ,YACtCS,EAAU9L,OAAe+L,EAAKF,EAAUlH,KAAK3E,UAAkBgM,GAAKX,EAAOW,aAC3EC,EAASjM,OAAe+L,EAAKF,EAAiB,MAAE7L,UAAkBgM,GAAKX,EAAOW,aAC9ED,EAAKG,OAJHlM,EAIakM,EAAOC,KAAO/J,EAAQ8J,EAAOlM,QAJ1CA,EAIyDkM,EAAOlM,MAJhDA,aAAiB4L,EAAI5L,MAAY4L,YAAYxJ,GAAWA,EAAQpC,OAITuG,KAAKuF,EAAWG,GAClGF,GAAMF,EAAYA,EAAUO,MAAMV,EAASC,QAAmBhH,gBAWlEmP,EAAgB,QAIhBC,EAAW,QACTC,EAAWhD,GAAQ,YAEhBiD,EAAW1C,EAAU2C,EAAU,GAAIC,QAAkB,QAC1DJ,EAAWxC,GACXtG,QAAQC,IAAI,cAAe6I,GAC3BC,EACK3O,IAAI,GAAKkM,SAAUwC,EAAW,IAAM,MACpCxN,SAAWyN,EAAS3O,IAAI,GAAKkM,SAAqB,IAAXwC,KACvCxN,SAAY4N,IAAcpH,MAAMmH,GAAW,eAE3CE,WACGpF,EAAOtF,SAASe,KAAM7L,GAAMA,EAAE8J,WAAawG,YAE9CmF,YACIrF,EAAOrF,QAAQc,KAAMuI,GAAMA,EAAEf,mBAAqB/C,GACvD8D,EAAEP,cAAgBzD,EAAOlF,iBACzBkF,EAAOlF,gBAAkBsI,GACzBpD,EAAOlF,gBAAkBqF,YAExBmF,YACItF,EAAOpF,MAAMa,KAAMyI,GAAMA,EAAElB,iBAAmB9C,GACnDgE,EAAET,cAAgBzD,EAAOlF,iBACzBkF,EAAOlF,gBAAkBsI,GACzBpD,EAAOlF,gBAAkBqF,+CAEjCzN,MAAc+J,oCACVlC,GAAM5M,UAAWuN,IACT4J,IAAkB5J,EAAUT,QAGR,SAApBS,EAAUT,MACVwK,EAzCM,IAyCgB,4BAA6BG,GAE1B,UAApBlK,EAAUT,MACfwK,EA3CO,GA2CgB,0BAA2BI,GAEzB,SAApBnK,EAAUT,MACfwK,EAAWM,EAAW,yBAA0BD,GAEvB,aAApBpK,EAAUT,MACfwK,EAAWO,GAEc,gBAApBtK,EAAUT,OACG,gBAAlBqK,GACAG,EAAWQ,OAEfX,EAAgB5J,EAAUT,+CAtD/B8K,EAAY,EAAIvF,EAAOxF,MAAM7K,wBAC7B6V,EAAW,EAAIxF,EAAOxF,MAAM7K,wBAC5B8V,EAAmB,EAAIzF,EAAOxF,MAAM7K,6BAEpCoQ,EAAUC,EAAOxF,MAAMyF,KAAMvE,GAAMA,EAAEhC,WAAawG,qBAClDC,EAAkBJ,EAAUA,EAAQI,gBAAkB,qBACtDiD,EAAkBrD,EAAUA,EAAQqD,gBAAkB,uBAGtDsC,EAAWpP,KAAKgH,OAAO,EAAIqI,GAAaZ,wLCLV5Q,KAAO2G,iDADtB3G,KAAgBgL,iBAAkB,qLAAlChL,KAAgBgL,oCACDhL,KAAO2G,mgBAsBxB3G,KAAKkH,OAASlH,KAAeiC,IAAIjC,KAAKuF,WAAa,+HAAnDvF,KAAKkH,OAASlH,KAAeiC,IAAIjC,KAAKuF,WAAa,0DAOvDvF,KAAKmH,WAAanH,KAAkBiC,IAAIjC,KAAKuF,WAAa,+HAA1DvF,KAAKmH,WAAanH,KAAkBiC,IAAIjC,KAAKuF,WAAa,2EAMzDvF,KAAO2G,iBAAmB3G,KAAKgM,mBAE1BhM,KAAO2G,iBAAmB3G,KAAKiP,wNAGtCjP,KAAYiC,IAAIjC,KAAKuF,WAAa,gEAAlCvF,KAAYiC,IAAIjC,KAAKuF,WAAa,oUAMpCvF,KAAUiC,IAAIjC,KAAKuF,WAAa,gEAAhCvF,KAAUiC,IAAIjC,KAAKuF,WAAa,yFA1BlCvF,KAAKkH,WACDlH,KAAKkH,OAASlH,KAAeiC,IAAIjC,KAAKuF,WAAa,IAAuB,gBAAjBvF,KAAOsG,QAKpEtG,KAAKmH,eACDnH,KAAKmH,WAAanH,KAAkBiC,IAAIjC,KAAKuF,WAAa,IAAuB,gBAAjBvF,KAAOsG,gEAOtD,gBAAjBtG,KAAOsG,eAWU,gBAAjBtG,KAAOsG,4vBAzBXtG,KAAKkH,2BACDlH,KAAKkH,OAASlH,KAAeiC,IAAIjC,KAAKuF,WAAa,IAAuB,gBAAjBvF,KAAOsG,sFAKpEtG,KAAKmH,+BACDnH,KAAKmH,WAAanH,KAAkBiC,IAAIjC,KAAKuF,WAAa,IAAuB,gBAAjBvF,KAAOsG,mEAOtD,gBAAjBtG,KAAOsG,gEAWU,gBAAjBtG,KAAOsG,kWAjDI,QAAjBtG,KAAOsG,sCAYc,gBAAjBtG,KAAOsG,cAGU,gBAAjBtG,KAAOsG,cAEPtG,gBAAqBA,KAAKuF,yBAA/B/J,g8BALsB,gBAAjBwE,KAAOsG,uDAGU,gBAAjBtG,KAAOsG,sEAEPtG,mFAALxE,wMA/BkBuT,sHAInBG,EAA6F,WAA1EH,EAAKlD,EAAOtF,SAASuF,KAAMrQ,GAAMA,EAAEuM,SAAW6D,EAAOlF,2BAA6BoI,EAAgBA,GAAO/D,UAAYzF,SAAU,GAAIyC,OAAQ,uBAC9JyJ,MAAgB3P,IAAI+J,EAAOpF,MACzBxD,OAAQ8M,GAAMA,EAAET,cAAgBzD,EAAOlF,gBACvC3D,IAAK+M,IAAOA,EAAElB,eAAgBkB,EAAEX,mCAClCsC,MAAkB5P,IAAI+J,EAAOrF,QAC3BvD,OAAQ4M,GAAMA,EAAEP,cAAgBzD,EAAOlF,gBACvC3D,IAAK6M,IAAOA,EAAEf,iBAAkBe,EAAEV,qCACpCwC,MAAkB9F,EAAOxF,OAAOoK,MAAMmB,EAAIC,IAAOA,EAAG3K,MAAQ2K,EAAG1K,UAAYyK,EAAG1K,MAAQ0K,EAAGzK,mSC+ElCnH,KAAOsG,wJAAPtG,KAAOsG,ydAxBxDtG,KAAOuG,SAASe,yWAZZtH,gBAAmBA,KAAKuF,yBAA7B/J,gUAOQwE,KAAUxE,OAAS,gIADnBwE,oCANHA,iEAOGA,KAAUxE,OAAS,iDAP3BA,yrBAiBOwE,KAAOuG,oBAAqBvG,MAAQuF,yBAAzC/J,gEAMKwE,KAAOqG,MAAMpD,wBAAgFjD,KAAKuF,yBAAvG/J,imBANKwE,KAAOuG,oEAMPvG,KAAOqG,MAAMpD,sFANlBzH,oCAMAA,+SALcwE,KAAUA,MAAQuF,wIAAlBvF,KAAUA,MAAQuF,o7BAvBlB,KAAjBvF,OAEsB,UAAjBA,KAAOsG,QAcU,SAAjBtG,KAAOsG,QAoBU,UAAjBtG,KAAOsG,OAAsC,SAAjBtG,KAAOsG,OAAqC,aAAjBtG,KAAOsG,QAE7C,gBAAjBtG,KAAOsG,OAA4C,QAAjBtG,KAAOsG,sCAM7B,KAAjBtG,0RAAiB,KAAjBA,gPA7FesI,EAAazD,MAAQA,KAAKyD,oBAAwBC,EAASC,EAAYC,EAAGC,cAEhFD,IAAMA,EAAIzJ,oBAAoBC,EAASiJ,YACtCS,EAAU9L,OAAe+L,EAAKF,EAAUlH,KAAK3E,UAAkBgM,GAAKX,EAAOW,aAC3EC,EAASjM,OAAe+L,EAAKF,EAAiB,MAAE7L,UAAkBgM,GAAKX,EAAOW,aAC9ED,EAAKG,OAJHlM,EAIakM,EAAOC,KAAO/J,EAAQ8J,EAAOlM,QAJ1CA,EAIyDkM,EAAOlM,MAJhDA,aAAiB4L,EAAI5L,MAAY4L,YAAYxJ,GAAWA,EAAQpC,OAITuG,KAAKuF,EAAWG,GAClGF,GAAMF,EAAYA,EAAUO,MAAMV,EAASC,QAAmBhH,4DAYnEsQ,MAAgBjG,EAAOxF,yBAEPd,WACNE,KAAQqM,KACTrM,EAAKF,WAAaA,SACXE,SAGfmE,MAAM,eAAiBrE,EAAW,eAE9BA,SAAU,GACV2B,MAAO,EACP1B,QAAS,GACT2B,UAAW,EACX8H,gBAAiB,GACjBjD,gBAAiB,uBAId1D,EAAUzD,0CAEH2C,GAAOuK,kBAEV/H,GACHJ,MAAMI,QAwBavO,GAAMA,EAAE8J,WAAawG,EAWhBxE,IAAOsE,EAAOtF,SAASe,KAAM7L,GAAMA,EAAE8J,WAAagC,EAAEhC,kBC3E5E,oEAAQ,CAClB5K,OAAQiB,SAASoW,KACjBtO,MAAO"}